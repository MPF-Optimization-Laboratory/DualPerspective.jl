[
  {
    "objectID": "data/synthetic-UEG-samplecodeforMichael.html",
    "href": "data/synthetic-UEG-samplecodeforMichael.html",
    "title": "MaxEnt",
    "section": "",
    "text": "# Libraries\nimport numpy as np; pi=np.pi\nimport inversionmethods as IM\nimport matplotlib.pyplot as plt\n\n\nnpz = np.load('synthetic-UEG_testproblem.npz')\nfor file in npz.files:\n    print(file)\n    print(np.shape(npz[file]))\n\nA\n(201, 500)\nx\n(500,)\nb_avg\n(201,)\nb_std\n(201,)\nmu\n(500,)\ntaus\n(201,)\nomegas\n(500,)\n\n\n\nA = npz['A']; [Nk, Nomega] = np.shape(A)\nx = npz['x']\nmu = npz['mu']\nb_avg = npz['b_avg']\nb_std = npz['b_std']\ntaus = npz['omegas']\nomegas = npz['omegas'];\n\n\nb = b_avg\nm = mu\nC_iid = np.diag( b_std )\nSkw_dMEM = np.zeros((Nomega, Nk))\nSkw_dMEM[:,0], P_dMEM = IM.MEM_solve(A, b, C=C_iid, m=m, dual=1, alpha_min=1e-10, alpha_max=1e-3)\n\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 793244427.4078289\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 793244427.407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 2\nJacobian Norm: 4.9590337195366105\nPrimal-Dual Gap: 122960077157.50551\nPrimal value: 122960080080.01988\nDual value: -2922.514376728943\nRMS(Ax-b): 0.3497832734474601\nSum: nan | term 1, a*S, L: nan -6.48e-10 1.2296e+01\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 570886649.5934175\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 570886649.5934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 6.407546818260411\nPrimal-Dual Gap: 147739436343.8423\nPrimal value: 147739444343.8065\nDual value: -7999.964210760145\nRMS(Ax-b): 0.4519535179006096\nSum: nan | term 1, a*S, L: nan -5.24e-10 2.0528e+01\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 410858942.6200103\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 410858942.6200104\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 2\nJacobian Norm: 0.31617261209953956\nPrimal-Dual Gap: 258883405.58536658\nPrimal value: 258889917.07154465\nDual value: -6511.486178071937\nRMS(Ax-b): 0.022301376932397008\nSum: nan | term 1, a*S, L: nan -8.64e-10 4.9984e-02\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 295689294.62802416\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 295689294.6280242\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.11633511235520373\nPrimal-Dual Gap: 25224375.010271497\nPrimal value: 25229576.24819478\nDual value: -5213.518527366696\nRMS(Ax-b): 0.008206493930380946\nSum: nan | term 1, a*S, L: nan -8.14e-10 6.7683e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 212803349.00360572\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 212803349.00360578\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.10512285397247216\nPrimal-Dual Gap: 14823480.709281573\nPrimal value: 14826741.717956804\nDual value: -3755.018665902101\nRMS(Ax-b): 0.007415733171454552\nSum: nan | term 1, a*S, L: nan -1.28e-09 5.5268e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 153151521.44455916\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 153151521.44455922\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.07980505098393333\nPrimal-Dual Gap: 6146943.0087375\nPrimal value: 6150861.150094162\nDual value: -2702.739274850943\nRMS(Ax-b): 0.0056302503092499415\nSum: nan | term 1, a*S, L: nan -2.28e-09 3.1858e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 110220955.78197761\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 110220955.78197767\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.11586915788392219\nPrimal-Dual Gap: 9327459.335219322\nPrimal value: 9329386.928195601\nDual value: -1938.6737770551213\nRMS(Ax-b): 0.008173629235499571\nSum: nan | term 1, a*S, L: nan -1.95e-09 6.7142e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 79324442.74078283\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 79324442.74078289\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.114708269951987\nPrimal-Dual Gap: 6579011.904376555\nPrimal value: 6580392.169661654\nDual value: -1398.5719726957868\nRMS(Ax-b): 0.008091757108927592\nSum: nan | term 1, a*S, L: nan -2.59e-09 6.5804e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 57088664.9593417\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 57088664.95934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.09989743003045291\nPrimal-Dual Gap: 3591464.1332918038\nPrimal value: 3592058.834910747\nDual value: -1008.4978992453018\nRMS(Ax-b): 0.007047209822213453\nSum: nan | term 1, a*S, L: nan -4.13e-09 4.9911e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 41085894.26200114\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 41085894.2620012\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.09907012609967725\nPrimal-Dual Gap: 2542309.904754462\nPrimal value: 2542524.7958323783\nDual value: -726.1137872397362\nRMS(Ax-b): 0.006988864873709259\nSum: nan | term 1, a*S, L: nan -5.37e-09 4.9088e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 29568929.462802358\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 29568929.46280242\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.11021691987438785\nPrimal-Dual Gap: 2264179.950412155\nPrimal value: 2264619.5419982434\nDual value: -522.0904773638363\nRMS(Ax-b): 0.007774997793295996\nSum: nan | term 1, a*S, L: nan -6.32e-09 6.0753e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 21280334.900360517\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 21280334.90036058\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.10241760351280019\nPrimal-Dual Gap: 1407275.4807144979\nPrimal value: 1407365.0097229935\nDual value: -376.17237473799605\nRMS(Ax-b): 0.007224945757108244\nSum: nan | term 1, a*S, L: nan -8.39e-09 5.2461e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 15315152.144455861\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 15315152.144455925\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.08885302623733794\nPrimal-Dual Gap: 762469.6194142711\nPrimal value: 762400.3786368484\nDual value: -270.93883187203676\nRMS(Ax-b): 0.00626832249105166\nSum: nan | term 1, a*S, L: nan -1.12e-08 3.9488e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 11022095.578197705\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 11022095.578197768\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.07762329403469606\nPrimal-Dual Gap: 418792.6586704221\nPrimal value: 418806.74634065153\nDual value: -195.12165243658725\nRMS(Ax-b): 0.005476400078415106\nSum: nan | term 1, a*S, L: nan -1.53e-08 3.0141e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 7932444.274078227\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 7932444.27407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.07062653146127895\nPrimal-Dual Gap: 249482.18428949604\nPrimal value: 249545.8879234065\nDual value: -140.54061085498847\nRMS(Ax-b): 0.00498301368279436\nSum: nan | term 1, a*S, L: nan -2.11e-08 2.4955e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 5708866.495934113\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 5708866.495934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0676127418731681\nPrimal-Dual Gap: 164540.89543672692\nPrimal value: 164602.77433721305\nDual value: -101.23827177742675\nRMS(Ax-b): 0.004770500780122593\nSum: nan | term 1, a*S, L: nan -2.93e-08 2.2871e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 4108589.426200049\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 4108589.4262001123\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06635319870312602\nPrimal-Dual Gap: 114044.11832148104\nPrimal value: 114092.52313958415\nDual value: -72.94067798489561\nRMS(Ax-b): 0.004681688371201801\nSum: nan | term 1, a*S, L: nan -4.07e-08 2.2028e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 2956892.9462801786\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 2956892.946280242\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06464638624464629\nPrimal-Dual Gap: 77905.04730974257\nPrimal value: 77943.56351570843\nDual value: -52.59910138084388\nRMS(Ax-b): 0.004561340675000488\nSum: nan | term 1, a*S, L: nan -5.66e-08 2.0910e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 2128033.4900359944\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 2128033.490036058\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0645290127754146\nPrimal-Dual Gap: 55864.26528563184\nPrimal value: 55891.57528269574\nDual value: -37.936149810075506\nRMS(Ax-b): 0.0045530668633404926\nSum: nan | term 1, a*S, L: nan -7.84e-08 2.0834e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 1531515.2144455293\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 1531515.2144455926\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0646195751395464\nPrimal-Dual Gap: 40318.270499724145\nPrimal value: 40337.353890129634\nDual value: -27.38280407261641\nRMS(Ax-b): 0.0045594557529059125\nSum: nan | term 1, a*S, L: nan -1.09e-07 2.0893e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 1102209.5578197157\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 1102209.557819779\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0648253344101243\nPrimal-Dual Gap: 29202.103784573028\nPrimal value: 29215.33925980263\nDual value: -19.788069653218656\nRMS(Ax-b): 0.004573968731427572\nSum: nan | term 1, a*S, L: nan -1.50e-07 2.1026e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 793244.4274077658\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 793244.427407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06511511187112917\nPrimal-Dual Gap: 21205.02251344354\nPrimal value: 21214.211141196512\nDual value: -14.32217124816632\nRMS(Ax-b): 0.004594407940296643\nSum: nan | term 1, a*S, L: nan -2.08e-07 2.1214e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 570886.6495933544\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 570886.6495934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06544361030992993\nPrimal-Dual Gap: 15415.507441915877\nPrimal value: 15421.974923510044\nDual value: -10.387956363515109\nRMS(Ax-b): 0.004617580136095019\nSum: nan | term 1, a*S, L: nan -2.89e-07 2.1429e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 410858.94261994795\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 410858.9426200112\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06576008009766025\nPrimal-Dual Gap: 11201.935714356012\nPrimal value: 11206.585270863452\nDual value: -7.555848085821148\nRMS(Ax-b): 0.00463990779125777\nSum: nan | term 1, a*S, L: nan -4.00e-07 2.1636e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 295689.2946279609\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 295689.29462802416\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06603447899973354\nPrimal-Dual Gap: 8129.2984455934175\nPrimal value: 8132.700670937465\nDual value: -5.516768016472092\nRMS(Ax-b): 0.004659273784786389\nSum: nan | term 1, a*S, L: nan -5.55e-07 2.1817e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 212803.34900354253\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 212803.34900360578\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06626340644972477\nPrimal-Dual Gap: 5891.1716952827965\nPrimal value: 5893.690953750051\nDual value: -4.048246187956078\nRMS(Ax-b): 0.004675439995846344\nSum: nan | term 1, a*S, L: nan -7.70e-07 2.1969e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 153151.521444496\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 153151.52144455924\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06645763771030497\nPrimal-Dual Gap: 4264.682524396342\nPrimal value: 4266.566887693351\nDual value: -2.9900931739910526\nRMS(Ax-b): 0.004689168440011508\nSum: nan | term 1, a*S, L: nan -1.07e-06 2.2098e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 110220.95578191463\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 110220.95578197787\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.066631197069897\nPrimal-Dual Gap: 3085.2842429815705\nPrimal value: 3086.7099182769894\nDual value: -2.2269352731410006\nRMS(Ax-b): 0.004701450898520759\nSum: nan | term 1, a*S, L: nan -1.48e-06 2.2214e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 79324.44274071966\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 79324.4427407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06679673041268673\nPrimal-Dual Gap: 2231.483529031278\nPrimal value: 2232.5772595532244\nDual value: -1.6756626406508826\nRMS(Ax-b): 0.004713182706543313\nSum: nan | term 1, a*S, L: nan -2.06e-06 2.2325e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 57088.66495927851\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 57088.66495934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06696377328048568\nPrimal-Dual Gap: 1614.0116123903929\nPrimal value: 1614.864557886702\nDual value: -1.2764066047549179\nRMS(Ax-b): 0.004725040655683766\nSum: nan | term 1, a*S, L: nan -2.86e-06 2.2438e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 41085.89426193787\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 41085.89426200112\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06713743925677024\nPrimal-Dual Gap: 1167.6160089760695\nPrimal value: 1168.2935246609964\nDual value: -0.9860579029302006\nRMS(Ax-b): 0.00473739043939312\nSum: nan | term 1, a*S, L: nan -3.97e-06 2.2555e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 29568.929462739237\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 29568.929462802484\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06731673131941632\nPrimal-Dual Gap: 844.812285659937\nPrimal value: 845.3610445163097\nDual value: -0.7736105806646254\nRMS(Ax-b): 0.004750167395645734\nSum: nan | term 1, a*S, L: nan -5.52e-06 2.2677e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 21280.33490029733\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 21280.334900360576\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06749267323229444\nPrimal-Dual Gap: 611.1825843785853\nPrimal value: 611.6357768085375\nDual value: -0.6168082960031\nRMS(Ax-b): 0.004762744471495765\nSum: nan | term 1, a*S, L: nan -7.67e-06 2.2797e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 15315.152144392647\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 15315.152144455895\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06764715222650489\nPrimal-Dual Gap: 441.87549167889676\nPrimal value: 442.2565962852744\nDual value: -0.49971090986790223\nRMS(Ax-b): 0.004773850336518565\nSum: nan | term 1, a*S, L: nan -1.07e-05 2.2904e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 11022.09557813454\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 11022.095578197788\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06775373057719751\nPrimal-Dual Gap: 319.0140945920069\nPrimal value: 319.3395897760963\nDual value: -0.41091165024110765\nRMS(Ax-b): 0.00478162637163042\nSum: nan | term 1, a*S, L: nan -1.48e-05 2.2978e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 7932.444274015042\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 7932.444274078289\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06778143462508461\nPrimal-Dual Gap: 229.7770687143761\nPrimal value: 230.05837372222152\nDual value: -0.34222973049054417\nRMS(Ax-b): 0.004783893467952578\nSum: nan | term 1, a*S, L: nan -2.06e-05 2.3000e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 5708.866495870928\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 5708.866495934175\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06770177955064628\nPrimal-Dual Gap: 164.97796984712258\nPrimal value: 165.22285447479823\nDual value: -0.28777649557289386\nRMS(Ax-b): 0.004778646267834446\nSum: nan | term 1, a*S, L: nan -2.86e-05 2.2950e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 4108.589426136865\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 4108.589426200112\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06749865801006735\nPrimal-Dual Gap: 118.0198865998263\nPrimal value: 118.23354952190022\nDual value: -0.24333373096587607\nRMS(Ax-b): 0.004764747826775426\nSum: nan | term 1, a*S, L: nan -3.97e-05 2.2816e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 2956.892946217001\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 2956.8929462802485\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06718030731286537\nPrimal-Dual Gap: 84.1367836023766\nPrimal value: 84.3227468855014\nDual value: -0.2059845863223444\nRMS(Ax-b): 0.0047427691974372055\nSum: nan | term 1, a*S, L: nan -5.51e-05 2.2606e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 2128.03348997281\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 2128.0334900360576\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06679104273839788\nPrimal-Dual Gap: 59.851126178023364\nPrimal value: 60.01201835678963\nDual value: -0.17390663111607907\nRMS(Ax-b): 0.004715812907900172\nSum: nan | term 1, a*S, L: nan -7.65e-05 2.2350e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 1531.515214382345\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 1531.5152144455924\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06641646042557314\nPrimal-Dual Gap: 42.5909376898971\nPrimal value: 42.72914535913785\nDual value: -0.14619545931832434\nRMS(Ax-b): 0.00468988113400459\nSum: nan | term 1, a*S, L: nan -1.06e-04 2.2105e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 1102.2095577565315\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 1102.2095578197789\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06617158381550994\nPrimal-Dual Gap: 30.425268203869713\nPrimal value: 30.543357471406168\nDual value: -0.122587203786507\nRMS(Ax-b): 0.004673050778891991\nSum: nan | term 1, a*S, L: nan -1.47e-04 2.1947e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 793.2444273445816\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 793.244427407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06616487239499043\nPrimal-Dual Gap: 21.891190336672448\nPrimal value: 21.99200467966381\nDual value: -0.10305298443696387\nRMS(Ax-b): 0.004672953004166458\nSum: nan | term 1, a*S, L: nan -2.05e-04 2.1946e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 570.8866495301702\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 570.8866495934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0664499201624605\nPrimal-Dual Gap: 15.890132885718398\nPrimal value: 15.976610221050398\nDual value: -0.08741911723378859\nRMS(Ax-b): 0.004693378310279573\nSum: nan | term 1, a*S, L: nan -2.84e-04 2.2138e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 410.8589425567638\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 410.8589426200112\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06700086200213419\nPrimal-Dual Gap: 11.625948716410587\nPrimal value: 11.700854101440429\nDual value: -0.07522404586043407\nRMS(Ax-b): 0.004732538111957719\nSum: nan | term 1, a*S, L: nan -3.94e-04 2.2509e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 295.6892945647774\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 295.6892946280248\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 13\nJacobian Norm: 0.06705914594926231\nPrimal-Dual Gap: 8.381097659257348\nPrimal value: 8.453691560277447\nDual value: -0.07232930638915525\nRMS(Ax-b): 0.0047387074965763295\nSum: nan | term 1, a*S, L: nan -5.48e-04 2.2568e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 212.8033489403584\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 212.8033490036058\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 8\nJacobian Norm: 0.06812898740619067\nPrimal-Dual Gap: 6.225945305810733\nPrimal value: 6.288647789397351\nDual value: -0.06270248358661856\nRMS(Ax-b): 0.004814356259619356\nSum: nan | term 1, a*S, L: nan -7.60e-04 2.3294e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 153.15152138131185\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 153.15152144455925\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 15\nJacobian Norm: 0.06876290781625755\nPrimal-Dual Gap: 4.564495227968727\nPrimal value: 4.625297967176778\nDual value: -0.060802739208051015\nRMS(Ax-b): 0.004862188322630238\nSum: nan | term 1, a*S, L: nan -1.06e-03 2.3759e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 110.22095571873047\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 110.22095578197788\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 9\nJacobian Norm: 0.07006325432993324\nPrimal-Dual Gap: 3.410419153427449\nPrimal value: 3.4636695894230725\nDual value: -0.0532504359956234\nRMS(Ax-b): 0.004954214614843161\nSum: nan | term 1, a*S, L: nan -1.47e-03 2.4667e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 79.32444267753549\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 79.3244427407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 27\nJacobian Norm: 0.07015200050506341\nPrimal-Dual Gap: 2.460458715400407\nPrimal value: 2.520166934962577\nDual value: -0.05951534753136922\nRMS(Ax-b): 0.004972787392864543\nSum: nan | term 1, a*S, L: nan -2.03e-03 2.4852e-03\nSum x: 1.000e+00 sum m: 1.000e+00\n[[ 1.00000000e-10             nan -6.48117672e-10 -1.22960080e+01]\n [ 1.38949549e-10             nan -5.23841762e-10 -2.05283292e+01]\n [ 1.93069773e-10             nan -8.63594703e-10 -4.99838170e-02]\n [ 2.68269580e-10             nan -8.14058695e-10 -6.76832753e-03]\n [ 3.72759372e-10             nan -1.28132125e-09 -5.52680640e-03]\n [ 5.17947468e-10             nan -2.28037962e-09 -3.18582171e-03]\n [ 7.19685673e-10             nan -1.95409696e-09 -6.71422560e-03]\n [ 1.00000000e-09             nan -2.59211876e-09 -6.58039158e-03]\n [ 1.38949549e-09             nan -4.13465345e-09 -4.99114821e-03]\n [ 1.93069773e-09             nan -5.37193029e-09 -4.90884534e-03]\n [ 2.68269580e-09             nan -6.32470011e-09 -6.07528436e-03]\n [ 3.72759372e-09             nan -8.38770986e-09 -5.24608404e-03]\n [ 5.17947468e-09             nan -1.11969272e-08 -3.94883262e-03]\n [ 7.19685673e-09             nan -1.52838939e-08 -3.01409126e-03]\n [ 1.00000000e-08             nan -2.11302617e-08 -2.49545775e-03]\n [ 1.38949549e-08             nan -2.93147779e-08 -2.28714661e-03]\n [ 1.93069773e-08             nan -4.06635302e-08 -2.20277970e-03]\n [ 2.68269580e-08             nan -5.65653266e-08 -2.09098579e-03]\n [ 3.72759372e-08             nan -7.84071637e-08 -2.08340700e-03]\n [ 5.17947468e-08             nan -1.08625856e-07 -2.08925799e-03]\n [ 7.19685673e-08             nan -1.50456268e-07 -2.10257959e-03]\n [ 1.00000000e-07             nan -2.08389779e-07 -2.12141272e-03]\n [ 1.38949549e-07             nan -2.88711680e-07 -2.14286565e-03]\n [ 1.93069773e-07             nan -4.00209364e-07 -2.16363880e-03]\n [ 2.68269580e-07             nan -5.55092335e-07 -2.18173764e-03]\n [ 3.72759372e-07             nan -7.70272582e-07 -2.19690379e-03]\n [ 5.17947468e-07             nan -1.06919496e-06 -2.20982422e-03]\n [ 7.19685673e-07             nan -1.48440089e-06 -2.22141588e-03]\n [ 1.00000000e-06             nan -2.06109148e-06 -2.23251617e-03]\n [ 1.38949549e-06             nan -2.86209390e-06 -2.24376392e-03]\n [ 1.93069773e-06             nan -3.97479870e-06 -2.25550825e-03]\n [ 2.68269580e-06             nan -5.52083757e-06 -2.26769107e-03]\n [ 3.72759372e-06             nan -7.66951090e-06 -2.27971536e-03]\n [ 5.17947468e-06             nan -1.06562648e-05 -2.29035953e-03]\n [ 7.19685673e-06             nan -1.48079386e-05 -2.29782705e-03]\n [ 1.00000000e-05             nan -2.05772482e-05 -2.30000649e-03]\n [ 1.38949549e-05             nan -2.85902840e-05 -2.29496375e-03]\n [ 1.93069773e-05             nan -3.97128150e-05 -2.28163360e-03]\n [ 2.68269580e-05             nan -5.51438069e-05 -2.26063290e-03]\n [ 3.72759372e-05             nan -7.65475205e-05 -2.23500858e-03]\n [ 5.17947468e-05             nan -1.06238764e-04 -2.21049600e-03]\n [ 7.19685673e-05             nan -1.47439757e-04 -2.19465906e-03]\n [ 1.00000000e-04             nan -2.04633251e-04 -2.19456722e-03]\n [ 1.38949549e-04             nan -2.84048003e-04 -2.21379390e-03]\n [ 1.93069773e-04             nan -3.94330645e-04 -2.25089016e-03]\n [ 2.68269580e-04             nan -5.47644908e-04 -2.25676255e-03]\n [ 3.72759372e-04             nan -7.60279536e-04 -2.32939163e-03]\n [ 5.17947468e-04             nan -1.05564837e-03 -2.37590797e-03]\n [ 7.19685673e-04             nan -1.46542840e-03 -2.46669637e-03]\n [ 1.00000000e-03             nan -2.03494125e-03 -2.48522575e-03]]\n\n\n\n\n\n\n\n\n\n\n#C_iid = np.diag( np.std(data, axis=0) )\n#data_avg = np.average(data,axis=0)\n#C = (data-data_avg).T @ (data-data_avg)\n\nSkw_PTIK = np.zeros((Nomega, Nk))\nSkw_BGM = np.zeros((Nomega, Nk))\nSkw_sBGM = np.zeros((Nomega, Nk))\nSkw_pMEM = np.zeros((Nomega, Nk))\nSkw_dMEM = np.zeros((Nomega, Nk))\n\nfor i in range(1):\n    C_iid = np.diag( b_std ) \n    b = b_avg\n    m = mu\n    \n    #x_OLS = IM.TIK_solve(A, b, lam=0, cond_upperbound=1e6);\n    #x_TIK = IM.TIK_solve(A, b, lam=-1, cond_upperbound=1e6);\n    #Skw_PTIK[:,i] = IM.TIK_solve(A, b, cond_upperbound=1e6, proj_flag=1);\n    #x_TIK_dual = IM.TIK_solve_via_dual(A, np.reshape(b,(Ntau,1)), alpha=-1, R=None);\n    #x_SD, err = IM.SD_solve(A,b, cond_upperbound=1e6, proj_flag=1);\n    #x_CG, err = IM.CG_solve(A,b);\n    #Skw_BGM[:,i], glist_BGM, obj_list = IM.BGM_solve(A, b, C_iid, omegas );\n    #Skw_sBGM[:,i], glist_BGM_smeared, obj_list_smeared = IM.SmearedBGM_solve(A, b, C_iid, omegas);\n    Skw_dMEM[:,i], P_dMEM = IM.MEM_solve(A, b, C=C_iid, m=m, dual=1, alpha_min=1e-10, alpha_max=1e-3)\n    #tmp, P_pMEM = IM.MEM_solve(A, b, C=C_iid, m=m, alpha_min=1e-10, alpha_max=1e-3)\n    #Skw_pMEM[:,i] = tmp[:,0]\n\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 793244427.4078289\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 793244427.407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 2\nJacobian Norm: 4.9590337195366105\nPrimal-Dual Gap: 122960077157.50551\nPrimal value: 122960080080.01988\nDual value: -2922.514376728943\nRMS(Ax-b): 0.3497832734474601\nSum: nan | term 1, a*S, L: nan -6.48e-10 1.2296e+01\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 570886649.5934175\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 570886649.5934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 6.407546818260411\nPrimal-Dual Gap: 147739436343.8423\nPrimal value: 147739444343.8065\nDual value: -7999.964210760145\nRMS(Ax-b): 0.4519535179006096\nSum: nan | term 1, a*S, L: nan -5.24e-10 2.0528e+01\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 410858942.6200103\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 410858942.6200104\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 2\nJacobian Norm: 0.31617261209953956\nPrimal-Dual Gap: 258883405.58536658\nPrimal value: 258889917.07154465\nDual value: -6511.486178071937\nRMS(Ax-b): 0.022301376932397008\nSum: nan | term 1, a*S, L: nan -8.64e-10 4.9984e-02\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 295689294.62802416\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 295689294.6280242\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.11633511235520373\nPrimal-Dual Gap: 25224375.010271497\nPrimal value: 25229576.24819478\nDual value: -5213.518527366696\nRMS(Ax-b): 0.008206493930380946\nSum: nan | term 1, a*S, L: nan -8.14e-10 6.7683e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 212803349.00360572\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 212803349.00360578\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.10512285397247216\nPrimal-Dual Gap: 14823480.709281573\nPrimal value: 14826741.717956804\nDual value: -3755.018665902101\nRMS(Ax-b): 0.007415733171454552\nSum: nan | term 1, a*S, L: nan -1.28e-09 5.5268e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 153151521.44455916\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 153151521.44455922\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.07980505098393333\nPrimal-Dual Gap: 6146943.0087375\nPrimal value: 6150861.150094162\nDual value: -2702.739274850943\nRMS(Ax-b): 0.0056302503092499415\nSum: nan | term 1, a*S, L: nan -2.28e-09 3.1858e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 110220955.78197761\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 110220955.78197767\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.11586915788392219\nPrimal-Dual Gap: 9327459.335219322\nPrimal value: 9329386.928195601\nDual value: -1938.6737770551213\nRMS(Ax-b): 0.008173629235499571\nSum: nan | term 1, a*S, L: nan -1.95e-09 6.7142e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 79324442.74078283\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 79324442.74078289\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.114708269951987\nPrimal-Dual Gap: 6579011.904376555\nPrimal value: 6580392.169661654\nDual value: -1398.5719726957868\nRMS(Ax-b): 0.008091757108927592\nSum: nan | term 1, a*S, L: nan -2.59e-09 6.5804e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 57088664.9593417\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 57088664.95934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.09989743003045291\nPrimal-Dual Gap: 3591464.1332918038\nPrimal value: 3592058.834910747\nDual value: -1008.4978992453018\nRMS(Ax-b): 0.007047209822213453\nSum: nan | term 1, a*S, L: nan -4.13e-09 4.9911e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 41085894.26200114\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 41085894.2620012\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.09907012609967725\nPrimal-Dual Gap: 2542309.904754462\nPrimal value: 2542524.7958323783\nDual value: -726.1137872397362\nRMS(Ax-b): 0.006988864873709259\nSum: nan | term 1, a*S, L: nan -5.37e-09 4.9088e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 29568929.462802358\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 29568929.46280242\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.11021691987438785\nPrimal-Dual Gap: 2264179.950412155\nPrimal value: 2264619.5419982434\nDual value: -522.0904773638363\nRMS(Ax-b): 0.007774997793295996\nSum: nan | term 1, a*S, L: nan -6.32e-09 6.0753e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 21280334.900360517\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 21280334.90036058\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.10241760351280019\nPrimal-Dual Gap: 1407275.4807144979\nPrimal value: 1407365.0097229935\nDual value: -376.17237473799605\nRMS(Ax-b): 0.007224945757108244\nSum: nan | term 1, a*S, L: nan -8.39e-09 5.2461e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 15315152.144455861\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 15315152.144455925\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.08885302623733794\nPrimal-Dual Gap: 762469.6194142711\nPrimal value: 762400.3786368484\nDual value: -270.93883187203676\nRMS(Ax-b): 0.00626832249105166\nSum: nan | term 1, a*S, L: nan -1.12e-08 3.9488e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 11022095.578197705\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 11022095.578197768\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.07762329403469606\nPrimal-Dual Gap: 418792.6586704221\nPrimal value: 418806.74634065153\nDual value: -195.12165243658725\nRMS(Ax-b): 0.005476400078415106\nSum: nan | term 1, a*S, L: nan -1.53e-08 3.0141e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 7932444.274078227\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 7932444.27407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.07062653146127895\nPrimal-Dual Gap: 249482.18428949604\nPrimal value: 249545.8879234065\nDual value: -140.54061085498847\nRMS(Ax-b): 0.00498301368279436\nSum: nan | term 1, a*S, L: nan -2.11e-08 2.4955e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 5708866.495934113\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 5708866.495934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0676127418731681\nPrimal-Dual Gap: 164540.89543672692\nPrimal value: 164602.77433721305\nDual value: -101.23827177742675\nRMS(Ax-b): 0.004770500780122593\nSum: nan | term 1, a*S, L: nan -2.93e-08 2.2871e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 4108589.426200049\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 4108589.4262001123\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06635319870312602\nPrimal-Dual Gap: 114044.11832148104\nPrimal value: 114092.52313958415\nDual value: -72.94067798489561\nRMS(Ax-b): 0.004681688371201801\nSum: nan | term 1, a*S, L: nan -4.07e-08 2.2028e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 2956892.9462801786\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 2956892.946280242\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06464638624464629\nPrimal-Dual Gap: 77905.04730974257\nPrimal value: 77943.56351570843\nDual value: -52.59910138084388\nRMS(Ax-b): 0.004561340675000488\nSum: nan | term 1, a*S, L: nan -5.66e-08 2.0910e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 2128033.4900359944\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 2128033.490036058\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0645290127754146\nPrimal-Dual Gap: 55864.26528563184\nPrimal value: 55891.57528269574\nDual value: -37.936149810075506\nRMS(Ax-b): 0.0045530668633404926\nSum: nan | term 1, a*S, L: nan -7.84e-08 2.0834e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 1531515.2144455293\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 1531515.2144455926\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0646195751395464\nPrimal-Dual Gap: 40318.270499724145\nPrimal value: 40337.353890129634\nDual value: -27.38280407261641\nRMS(Ax-b): 0.0045594557529059125\nSum: nan | term 1, a*S, L: nan -1.09e-07 2.0893e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 1102209.5578197157\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 1102209.557819779\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0648253344101243\nPrimal-Dual Gap: 29202.103784573028\nPrimal value: 29215.33925980263\nDual value: -19.788069653218656\nRMS(Ax-b): 0.004573968731427572\nSum: nan | term 1, a*S, L: nan -1.50e-07 2.1026e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 793244.4274077658\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 793244.427407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06511511187112917\nPrimal-Dual Gap: 21205.02251344354\nPrimal value: 21214.211141196512\nDual value: -14.32217124816632\nRMS(Ax-b): 0.004594407940296643\nSum: nan | term 1, a*S, L: nan -2.08e-07 2.1214e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 570886.6495933544\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 570886.6495934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06544361030992993\nPrimal-Dual Gap: 15415.507441915877\nPrimal value: 15421.974923510044\nDual value: -10.387956363515109\nRMS(Ax-b): 0.004617580136095019\nSum: nan | term 1, a*S, L: nan -2.89e-07 2.1429e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 410858.94261994795\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 410858.9426200112\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06576008009766025\nPrimal-Dual Gap: 11201.935714356012\nPrimal value: 11206.585270863452\nDual value: -7.555848085821148\nRMS(Ax-b): 0.00463990779125777\nSum: nan | term 1, a*S, L: nan -4.00e-07 2.1636e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 295689.2946279609\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 295689.29462802416\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06603447899973354\nPrimal-Dual Gap: 8129.2984455934175\nPrimal value: 8132.700670937465\nDual value: -5.516768016472092\nRMS(Ax-b): 0.004659273784786389\nSum: nan | term 1, a*S, L: nan -5.55e-07 2.1817e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 212803.34900354253\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 212803.34900360578\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06626340644972477\nPrimal-Dual Gap: 5891.1716952827965\nPrimal value: 5893.690953750051\nDual value: -4.048246187956078\nRMS(Ax-b): 0.004675439995846344\nSum: nan | term 1, a*S, L: nan -7.70e-07 2.1969e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 153151.521444496\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 153151.52144455924\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06645763771030497\nPrimal-Dual Gap: 4264.682524396342\nPrimal value: 4266.566887693351\nDual value: -2.9900931739910526\nRMS(Ax-b): 0.004689168440011508\nSum: nan | term 1, a*S, L: nan -1.07e-06 2.2098e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 110220.95578191463\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 110220.95578197787\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.066631197069897\nPrimal-Dual Gap: 3085.2842429815705\nPrimal value: 3086.7099182769894\nDual value: -2.2269352731410006\nRMS(Ax-b): 0.004701450898520759\nSum: nan | term 1, a*S, L: nan -1.48e-06 2.2214e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 79324.44274071966\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 79324.4427407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06679673041268673\nPrimal-Dual Gap: 2231.483529031278\nPrimal value: 2232.5772595532244\nDual value: -1.6756626406508826\nRMS(Ax-b): 0.004713182706543313\nSum: nan | term 1, a*S, L: nan -2.06e-06 2.2325e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 57088.66495927851\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 57088.66495934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06696377328048568\nPrimal-Dual Gap: 1614.0116123903929\nPrimal value: 1614.864557886702\nDual value: -1.2764066047549179\nRMS(Ax-b): 0.004725040655683766\nSum: nan | term 1, a*S, L: nan -2.86e-06 2.2438e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 41085.89426193787\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 41085.89426200112\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06713743925677024\nPrimal-Dual Gap: 1167.6160089760695\nPrimal value: 1168.2935246609964\nDual value: -0.9860579029302006\nRMS(Ax-b): 0.00473739043939312\nSum: nan | term 1, a*S, L: nan -3.97e-06 2.2555e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 29568.929462739237\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 29568.929462802484\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06731673131941632\nPrimal-Dual Gap: 844.812285659937\nPrimal value: 845.3610445163097\nDual value: -0.7736105806646254\nRMS(Ax-b): 0.004750167395645734\nSum: nan | term 1, a*S, L: nan -5.52e-06 2.2677e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 21280.33490029733\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 21280.334900360576\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06749267323229444\nPrimal-Dual Gap: 611.1825843785853\nPrimal value: 611.6357768085375\nDual value: -0.6168082960031\nRMS(Ax-b): 0.004762744471495765\nSum: nan | term 1, a*S, L: nan -7.67e-06 2.2797e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 15315.152144392647\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 15315.152144455895\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06764715222650489\nPrimal-Dual Gap: 441.87549167889676\nPrimal value: 442.2565962852744\nDual value: -0.49971090986790223\nRMS(Ax-b): 0.004773850336518565\nSum: nan | term 1, a*S, L: nan -1.07e-05 2.2904e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 11022.09557813454\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 11022.095578197788\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06775373057719751\nPrimal-Dual Gap: 319.0140945920069\nPrimal value: 319.3395897760963\nDual value: -0.41091165024110765\nRMS(Ax-b): 0.00478162637163042\nSum: nan | term 1, a*S, L: nan -1.48e-05 2.2978e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 7932.444274015042\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 7932.444274078289\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06778143462508461\nPrimal-Dual Gap: 229.7770687143761\nPrimal value: 230.05837372222152\nDual value: -0.34222973049054417\nRMS(Ax-b): 0.004783893467952578\nSum: nan | term 1, a*S, L: nan -2.06e-05 2.3000e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 5708.866495870928\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 5708.866495934175\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06770177955064628\nPrimal-Dual Gap: 164.97796984712258\nPrimal value: 165.22285447479823\nDual value: -0.28777649557289386\nRMS(Ax-b): 0.004778646267834446\nSum: nan | term 1, a*S, L: nan -2.86e-05 2.2950e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 4108.589426136865\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 4108.589426200112\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06749865801006735\nPrimal-Dual Gap: 118.0198865998263\nPrimal value: 118.23354952190022\nDual value: -0.24333373096587607\nRMS(Ax-b): 0.004764747826775426\nSum: nan | term 1, a*S, L: nan -3.97e-05 2.2816e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 2956.892946217001\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 2956.8929462802485\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06718030731286537\nPrimal-Dual Gap: 84.1367836023766\nPrimal value: 84.3227468855014\nDual value: -0.2059845863223444\nRMS(Ax-b): 0.0047427691974372055\nSum: nan | term 1, a*S, L: nan -5.51e-05 2.2606e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 2128.03348997281\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 2128.0334900360576\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06679104273839788\nPrimal-Dual Gap: 59.851126178023364\nPrimal value: 60.01201835678963\nDual value: -0.17390663111607907\nRMS(Ax-b): 0.004715812907900172\nSum: nan | term 1, a*S, L: nan -7.65e-05 2.2350e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 1531.515214382345\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 1531.5152144455924\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06641646042557314\nPrimal-Dual Gap: 42.5909376898971\nPrimal value: 42.72914535913785\nDual value: -0.14619545931832434\nRMS(Ax-b): 0.00468988113400459\nSum: nan | term 1, a*S, L: nan -1.06e-04 2.2105e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 1102.2095577565315\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 1102.2095578197789\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06617158381550994\nPrimal-Dual Gap: 30.425268203869713\nPrimal value: 30.543357471406168\nDual value: -0.122587203786507\nRMS(Ax-b): 0.004673050778891991\nSum: nan | term 1, a*S, L: nan -1.47e-04 2.1947e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 793.2444273445816\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 793.244427407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06616487239499043\nPrimal-Dual Gap: 21.891190336672448\nPrimal value: 21.99200467966381\nDual value: -0.10305298443696387\nRMS(Ax-b): 0.004672953004166458\nSum: nan | term 1, a*S, L: nan -2.05e-04 2.1946e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 570.8866495301702\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 570.8866495934176\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.0664499201624605\nPrimal-Dual Gap: 15.890132885718398\nPrimal value: 15.976610221050398\nDual value: -0.08741911723378859\nRMS(Ax-b): 0.004693378310279573\nSum: nan | term 1, a*S, L: nan -2.84e-04 2.2138e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 410.8589425567638\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 410.8589426200112\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 0\nJacobian Norm: 0.06700086200213419\nPrimal-Dual Gap: 11.625948716410587\nPrimal value: 11.700854101440429\nDual value: -0.07522404586043407\nRMS(Ax-b): 0.004732538111957719\nSum: nan | term 1, a*S, L: nan -3.94e-04 2.2509e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 295.6892945647774\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 295.6892946280248\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 13\nJacobian Norm: 0.06705914594926231\nPrimal-Dual Gap: 8.381097659257348\nPrimal value: 8.453691560277447\nDual value: -0.07232930638915525\nRMS(Ax-b): 0.0047387074965763295\nSum: nan | term 1, a*S, L: nan -5.48e-04 2.2568e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 212.8033489403584\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 212.8033490036058\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 8\nJacobian Norm: 0.06812898740619067\nPrimal-Dual Gap: 6.225945305810733\nPrimal value: 6.288647789397351\nDual value: -0.06270248358661856\nRMS(Ax-b): 0.004814356259619356\nSum: nan | term 1, a*S, L: nan -7.60e-04 2.3294e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 153.15152138131185\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 153.15152144455925\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 15\nJacobian Norm: 0.06876290781625755\nPrimal-Dual Gap: 4.564495227968727\nPrimal value: 4.625297967176778\nDual value: -0.060802739208051015\nRMS(Ax-b): 0.004862188322630238\nSum: nan | term 1, a*S, L: nan -1.06e-03 2.3759e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 110.22095571873047\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 110.22095578197788\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 9\nJacobian Norm: 0.07006325432993324\nPrimal-Dual Gap: 3.410419153427449\nPrimal value: 3.4636695894230725\nDual value: -0.0532504359956234\nRMS(Ax-b): 0.004954214614843161\nSum: nan | term 1, a*S, L: nan -1.47e-03 2.4667e-03\nSum x: 1.000e+00 sum m: 1.000e+00\nfirst set_x just happened.\n----------\nIteration: 1\nPrimal value: 79.32444267753549\nDual value: 6.324740575542284e-08\nPrimal-Dual Gap: 79.3244427407829\nIter: 1, Dual Jacobian Norm: 0.3983075262677895\n----------\nSummary:\nTotal iters: 1000\nGrad steps: 27\nJacobian Norm: 0.07015200050506341\nPrimal-Dual Gap: 2.460458715400407\nPrimal value: 2.520166934962577\nDual value: -0.05951534753136922\nRMS(Ax-b): 0.004972787392864543\nSum: nan | term 1, a*S, L: nan -2.03e-03 2.4852e-03\nSum x: 1.000e+00 sum m: 1.000e+00\n[[ 1.00000000e-10             nan -6.48117672e-10 -1.22960080e+01]\n [ 1.38949549e-10             nan -5.23841762e-10 -2.05283292e+01]\n [ 1.93069773e-10             nan -8.63594703e-10 -4.99838170e-02]\n [ 2.68269580e-10             nan -8.14058695e-10 -6.76832753e-03]\n [ 3.72759372e-10             nan -1.28132125e-09 -5.52680640e-03]\n [ 5.17947468e-10             nan -2.28037962e-09 -3.18582171e-03]\n [ 7.19685673e-10             nan -1.95409696e-09 -6.71422560e-03]\n [ 1.00000000e-09             nan -2.59211876e-09 -6.58039158e-03]\n [ 1.38949549e-09             nan -4.13465345e-09 -4.99114821e-03]\n [ 1.93069773e-09             nan -5.37193029e-09 -4.90884534e-03]\n [ 2.68269580e-09             nan -6.32470011e-09 -6.07528436e-03]\n [ 3.72759372e-09             nan -8.38770986e-09 -5.24608404e-03]\n [ 5.17947468e-09             nan -1.11969272e-08 -3.94883262e-03]\n [ 7.19685673e-09             nan -1.52838939e-08 -3.01409126e-03]\n [ 1.00000000e-08             nan -2.11302617e-08 -2.49545775e-03]\n [ 1.38949549e-08             nan -2.93147779e-08 -2.28714661e-03]\n [ 1.93069773e-08             nan -4.06635302e-08 -2.20277970e-03]\n [ 2.68269580e-08             nan -5.65653266e-08 -2.09098579e-03]\n [ 3.72759372e-08             nan -7.84071637e-08 -2.08340700e-03]\n [ 5.17947468e-08             nan -1.08625856e-07 -2.08925799e-03]\n [ 7.19685673e-08             nan -1.50456268e-07 -2.10257959e-03]\n [ 1.00000000e-07             nan -2.08389779e-07 -2.12141272e-03]\n [ 1.38949549e-07             nan -2.88711680e-07 -2.14286565e-03]\n [ 1.93069773e-07             nan -4.00209364e-07 -2.16363880e-03]\n [ 2.68269580e-07             nan -5.55092335e-07 -2.18173764e-03]\n [ 3.72759372e-07             nan -7.70272582e-07 -2.19690379e-03]\n [ 5.17947468e-07             nan -1.06919496e-06 -2.20982422e-03]\n [ 7.19685673e-07             nan -1.48440089e-06 -2.22141588e-03]\n [ 1.00000000e-06             nan -2.06109148e-06 -2.23251617e-03]\n [ 1.38949549e-06             nan -2.86209390e-06 -2.24376392e-03]\n [ 1.93069773e-06             nan -3.97479870e-06 -2.25550825e-03]\n [ 2.68269580e-06             nan -5.52083757e-06 -2.26769107e-03]\n [ 3.72759372e-06             nan -7.66951090e-06 -2.27971536e-03]\n [ 5.17947468e-06             nan -1.06562648e-05 -2.29035953e-03]\n [ 7.19685673e-06             nan -1.48079386e-05 -2.29782705e-03]\n [ 1.00000000e-05             nan -2.05772482e-05 -2.30000649e-03]\n [ 1.38949549e-05             nan -2.85902840e-05 -2.29496375e-03]\n [ 1.93069773e-05             nan -3.97128150e-05 -2.28163360e-03]\n [ 2.68269580e-05             nan -5.51438069e-05 -2.26063290e-03]\n [ 3.72759372e-05             nan -7.65475205e-05 -2.23500858e-03]\n [ 5.17947468e-05             nan -1.06238764e-04 -2.21049600e-03]\n [ 7.19685673e-05             nan -1.47439757e-04 -2.19465906e-03]\n [ 1.00000000e-04             nan -2.04633251e-04 -2.19456722e-03]\n [ 1.38949549e-04             nan -2.84048003e-04 -2.21379390e-03]\n [ 1.93069773e-04             nan -3.94330645e-04 -2.25089016e-03]\n [ 2.68269580e-04             nan -5.47644908e-04 -2.25676255e-03]\n [ 3.72759372e-04             nan -7.60279536e-04 -2.32939163e-03]\n [ 5.17947468e-04             nan -1.05564837e-03 -2.37590797e-03]\n [ 7.19685673e-04             nan -1.46542840e-03 -2.46669637e-03]\n [ 1.00000000e-03             nan -2.03494125e-03 -2.48522575e-03]]\n\n\n\n\n\n\n\n\n\n\n#print(np.shape(Skw_MEM))\nplt.figure()\nfor index in range(1):\n    #print( np.sum(normalized_Skw[:,index]) )\n    #plt.plot(omegas, 1/310*reconstructions[index,::2,1], color='black', marker='o', label=\"Tobias\")\n    #plt.plot(omegas, normalized_Skw[:,index], color='black', marker='.')\n    #plt.plot(omegas, x, label=\"A.A. UEG\", color='black', marker='o', markevery=14)\n    #plt.plot(omegas, mu, color='black', marker='x', label=\"RPA UEG\", markevery=17)\n    #plt.plot(omegas, Skw_BGM[:,index], label=\"BGM\", c='r')\n    #plt.plot(omegas, Skw_sBGM[:,index], label=\"SBGM\", c='b')\n    #plt.plot(omegas, Skw_pMEM[:,index], label=\"primal MEM\", markevery=20)\n    plt.plot(omegas, Skw_dMEM[:,index], label=\"dual MEM\", markevery=20)\n#plt.plot(omegas, x0/np.sum(x0), label='prior: $\\S_{RPA}(k/k_{D,e}=.12,\\omega/\\omega_{p,e})$', c='black')\n#plt.xlim([0,1.5])\nplt.ylim([0,.02])\nplt.xlabel(\"$\\omega/\\omega_{p,e}$\", fontsize=20)\nplt.title(\"$S(k,\\omega)$\", fontsize=24)\nplt.tick_params(axis='both', labelsize=16)\nplt.legend(fontsize=16, loc='upper right')\nplt.savefig(\"synthetic-UEG_reconstructions_noise-0p0001_prior-RPA.png\", bbox_inches=\"tight\")\n\n&lt;&gt;:16: SyntaxWarning: invalid escape sequence '\\o'\n&lt;&gt;:17: SyntaxWarning: invalid escape sequence '\\o'\n&lt;&gt;:16: SyntaxWarning: invalid escape sequence '\\o'\n&lt;&gt;:17: SyntaxWarning: invalid escape sequence '\\o'\n/var/folders/y8/2plbqtpd2y5csxrfjg_fs0qr0000gp/T/ipykernel_35514/3647572306.py:16: SyntaxWarning: invalid escape sequence '\\o'\n  plt.xlabel(\"$\\omega/\\omega_{p,e}$\", fontsize=20)\n/var/folders/y8/2plbqtpd2y5csxrfjg_fs0qr0000gp/T/ipykernel_35514/3647572306.py:17: SyntaxWarning: invalid escape sequence '\\o'\n  plt.title(\"$S(k,\\omega)$\", fontsize=24)"
  },
  {
    "objectID": "quarto/derivations.html",
    "href": "quarto/derivations.html",
    "title": "Cross Entropy under Linear Constraints",
    "section": "",
    "text": "Define the cross-entropy and log-exponential functions by \\[\n\\begin{aligned}\n\\mathop{\\mathrm{cent}}(p \\mid q) &= \\sum_{i=1}^n p_i \\log(p_i/q_i), \\\\\n\\mathop{\\mathrm{logexp}}(p \\mid q) &= \\log\\sum_{i=1}^n q_i\\exp(p_i),\n\\end{aligned}\n\\] which form a conjugate pair. We consider the pair of dual optimization problems \\[\n\\begin{aligned}\n\\min_{p,\\, y } &\\enspace\\left\\{\\mathop{\\mathrm{cent}}(p \\mid q) + \\lambda/2\\|y\\|^2 \\mid Ax + \\lambda y = b\\right\\}\\\\\n\\min_{y} &\\enspace\\left\\{\\mathop{\\mathrm{logexp}}(A^Ty \\mid q) + \\lambda/2\\|y\\|^2 - \\langle b,y \\rangle\\right\\},\n\\end{aligned}\n\\] where \\(A\\) is an \\(m\\)-by-\\(n\\) matrix, \\(b\\) is an \\(m\\)-vector, and \\(\\lambda\\) is a nonnegative regularization parameter."
  },
  {
    "objectID": "quarto/derivations.html#problem-statement",
    "href": "quarto/derivations.html#problem-statement",
    "title": "Cross Entropy under Linear Constraints",
    "section": "",
    "text": "Define the cross-entropy and log-exponential functions by \\[\n\\begin{aligned}\n\\mathop{\\mathrm{cent}}(p \\mid q) &= \\sum_{i=1}^n p_i \\log(p_i/q_i), \\\\\n\\mathop{\\mathrm{logexp}}(p \\mid q) &= \\log\\sum_{i=1}^n q_i\\exp(p_i),\n\\end{aligned}\n\\] which form a conjugate pair. We consider the pair of dual optimization problems \\[\n\\begin{aligned}\n\\min_{p,\\, y } &\\enspace\\left\\{\\mathop{\\mathrm{cent}}(p \\mid q) + \\lambda/2\\|y\\|^2 \\mid Ax + \\lambda y = b\\right\\}\\\\\n\\min_{y} &\\enspace\\left\\{\\mathop{\\mathrm{logexp}}(A^Ty \\mid q) + \\lambda/2\\|y\\|^2 - \\langle b,y \\rangle\\right\\},\n\\end{aligned}\n\\] where \\(A\\) is an \\(m\\)-by-\\(n\\) matrix, \\(b\\) is an \\(m\\)-vector, and \\(\\lambda\\) is a nonnegative regularization parameter."
  },
  {
    "objectID": "quarto/derivations.html#implicit-approach",
    "href": "quarto/derivations.html#implicit-approach",
    "title": "Cross Entropy under Linear Constraints",
    "section": "Implicit approach",
    "text": "Implicit approach\n\nOptimality conditions\nA pair \\((p, y)\\) is primal-dual optimal if and only if it satisfies the optimality conditions \\[\n\\begin{aligned}\nb &= Ax + \\lambda y, \\\\\nx_j &= \\frac{1}{\\sigma(x)}{q_j\\exp(\\langle a_j,y \\rangle)}, \\quad j\\in[n],\\\\\n\\sigma(x) &= \\sum_{j=1}^n q_j\\exp(\\langle a_j,y \\rangle),\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "quarto/about.html",
    "href": "quarto/about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "quarto/scale.html",
    "href": "quarto/scale.html",
    "title": "Scaled simplex",
    "section": "",
    "text": "\\[\n\\newcommand{\\ent}[2]{\\text{\\bf ent}(#1\\mid #2)}\n\\newcommand{\\KL}[2]{\\text{\\bf KL}(#1\\mid #2)}\n\\]\nConsider a scaled version of the problem where the variables lie in the scaled simplex: \\[\n\\min_{x\\in\\tau\\Delta}\\enspace \\ent{p}{q} + \\frac{1}{2\\lambda}\\|Ax-b\\|^2,\n\\] where \\(\\tau\\) is any positive scaling. Observe that \\[\n\\begin{aligned}\n\\ent{p}{q} + \\delta_{\\tau\\Delta}(p)\n&= \\sum_{j=1}^n p_j\\log\\left(\\frac{p_j}{q_j}\\right) + \\delta_{\\tau\\Delta}(p)\\\\\n&= \\tau\\sum_{j=1}^n \\left(\\frac{p_j}{\\tau}\\right)\\log\\left(\\frac{p_j}{\\tau}\\frac{\\tau}{q_j}\\right) + \\delta_{\\Delta}\\left(\\frac{p}{τ}\\right)\\\\\n&= \\tau\\KL{p/\\tau}{q/\\tau},\n\\end{aligned}\n\\] which we recognize as the \\(\\tau\\)-perspective transform of KL with a rescaled prior. If we wish that this is a well-formed KL problem, we need to have, in addition to nonnegativity of \\(p\\) and \\(q\\), \\[\n\\sum_{j=1}^n p_j = \\tau \\quad\\text{and}\\quad \\sum_{j=1}^n q_j = \\tau.\n\\] The dual problem corresponding the scaled primal problem is \\[\n\\min_{y\\in\\mathbb{R}^m}\\enspace \\tau\\log\\sum_{i=1}^m \\left(\\frac{q_j}{\\tau}\\right)\\exp(A^T y) + \\frac{\\lambda}{2}\\|y\\|^2 - \\langle b, y \\rangle.\n\\tag{1}\\]\n\nObjective function\nLet’s isolate \\(\\tau\\) in the objective function to faciliate the computation of the value-function derivative: \\[\n\\begin{aligned}\n\\tau\\log\\sum_{j=1}^n \\left(\\frac{q_j}{\\tau}\\right)\\exp(z_j)\n&= \\tau\\log\\frac1\\tau\\sum_{j=1}^n q_j\\exp(z_j)\\\\\n&= \\tau\\log\\frac1\\tau + \\tau\\log\\sum_{j=1}^n q_j\\exp(z_j)\\\\\n&= \\tau\\log\\sum_{j=1}^n q_j\\exp(z_j) - \\tau\\log\\tau.\n\\end{aligned}\n\\tag{2}\\]\nInformally, it follows from Equation 1 and Equation 2 that the derivative of the optimal value with respect to the scaling τ is \\[\nv'(τ) = \\log\\sum_{j=1}^n q_j\\exp(A^Ty) - \\log\\tau - 1.\n\\tag{3}\\]\n\n\nTest problem\n\n\nImport packages\nusing KLLS: KLLS, solve!, KLLSModel, scale!, regularize!\nusing LinearAlgebra\nusing Plots, Random\n\n\nGenerate a small test problem where the solution is on the scaled simplex:\n\nRandom.seed!(123)\nm, n = 3,5\nτ = 2.0\nA = randn(m,n)\nx = τ*(v=rand(n); v/sum(v))\nb = A*x\nkl = KLLSModel(A, b)\nregularize!(kl, 1e-4)\nscale!(kl, τ)\n\nKL regularized least-squares\n\n\n   m =     3  bNrm = 1.7e+00\n   n =     5  λ    = 1.0e-04\n              τ    = 2.0e+00\n\n\nLet’s solve the problem and verify that the solution looks reasonable.\n\nstats = solve!(kl)\nprintln(stats)\nprintln(\"sum(x) = $(sum(stats.solution))\")\n\n\nOptimality conditions satisfied\nProducts with A   :        23\nProducts with A'  :        23\nTime elapsed (sec):       0.0\n||Ax-b||₂         :   1.6e-04\nOptimality        :   5.0e-09\n\nsum(x) = 1.9999999999999998\n\n\n\n\nValue function and derivative\nThe following function computes the value and derivative for a given τ.\n\nfunction value(τ, kl)\n\n    scale!(kl, τ)\n    λ = kl.λ\n    s = solve!(kl, logging=0, trace=false)\n    y = s.residual/λ\n    v = s.dual_obj\n\n    # Linearization at τ̅: v(τ) = v(τ̅) + dv(τ̅)(τ - τ̅) \n    dv = KLLS.obj!(kl.lse, A'y) - log(τ) - 1\n    return v, dv \nend;\n\nPlot the optimal objective value as a function of the scaling τ, and as a check of our derivative, plot the linearization at τ=1.5.\n\nlet\n  scales = range(1.0, 2.2, length=50)\n  vals = [value(t, kl)[1] for t in scales]\n  plot(scales, vals,\n       label=\"Dual objective\", xlabel=\"Scale\", ylabel=\"Objective value\", title=\"Dual objective vs Scale\")\n\n  τ = 1.5\n  v, dv = value(τ, kl)\n\n  plot!(t -&gt; v + dv*(t - τ), 1.4, 1.6, label=\"Linearization\", linestyle=:dash, color=:red)\nend\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMaximizing the value function\nWe can use a root-finding procedure to solve the problem \\[\n\\max_{\\tau} v(τ),\n\\] where \\(v(τ)\\) is the value function defined in Equation 3. The following code snippet finds the optimal scaling τ. Because \\(v\\) is concave in \\(\\tau\\) (proof needed), we can simply use a root-finding algorithm to find the point at which \\(v'(t) = 0\\).\n\nimport Roots\ndv(t) = value(t, kl)[2]\ntopt = Roots.find_zero(dv, 1.0, verbose=true, rtol=1e-3, atol=1e-3)\nprintln(\"Optimal scaling t = $topt\")\n\nResults of univariate zero finding:\n\n* Converged to: 1.6423610233003147\n* Algorithm: Roots.Secant()\n* iterations: 12\n* function evaluations ≈ 16\n* stopped as |f(x_n)| ≤ max(δ, |x|⋅ϵ) using δ = atol, ϵ = rtol\n\nTrace:\nx₁ = 1.000006055491121,  fx₁ = 310.14820161666796\nx₂ = 1,  fx₂ = 310.20762737180883\nx₃ = 1.0006055491120982,     fx₃ = 304.2840662238786\nx₄ = 1.0317116593599653,     fx₄ = 278.28469272196963\nx₅ = 1.3646563871038027,     fx₅ = 81.146357991684511\nx₆ = 1.5017035631688183,     fx₆ = 4.6356424487061476\nx₇ = 1.5100069975614221,     fx₇ = 3.5104540366402057\nx₈ = 1.5359127254101239,     fx₈ = 1.8656630255625832\nx₉ = 1.5652972236668019,     fx₉ = 1.0118217649352803\nx₁₀ = 1.6001185379541509,    fx₁₀ = 0.43611409704863657\nx₁₁ = 1.6264966233706963,    fx₁₁ = 0.14220690934759084\nx₁₂ = 1.6392596525124308,    fx₁₂ = 0.026207222461555268\nx₁₃ = 1.6421431391232986,    fx₁₃ = 0.0018411662095438874\nx₁₄ = 1.6423610233003147,    fx₁₄ = 2.5318607495439238e-05\n\n\n\nOptimal scaling t = 1.6423610233003147\n\n\nNow use the built-in function:\n\ntopt, xopt = KLLS.maximize!(kl, rtol=1e-3)\n\n(1.6423610233003147, [0.5223994319029693, 0.026657470032421242, 0.43507286937279593, 0.1625773971060391, 0.49565385488608904])"
  },
  {
    "objectID": "test/scratch.html",
    "href": "test/scratch.html",
    "title": "MaxEnt",
    "section": "",
    "text": "import Pkg; Pkg.activate(\"..\"); Pkg.instantiate()\nusing Revise\nusing NLPModels\nusing KLLS\nusing JSOSolvers\n\n  Activating project at `~/.julia/dev/KLLS`\n\n\n\nm, n = 2, 3\nA = randn(m, n)\np = (v=rand(n); v=v/sum(v))\nb = A*p + 0.1*randn(m)\nλ = 1e-1\ndata = KLLSData(A, b, λ=λ)\nnlp = KLLSModel(data);\n\n\nstats = trunk(nlp, verbose=1)\n\n┌ Info:   iter      f(x)         π         Δ     ratio   inner      bk         cgstatus  \n└ @ JSOSolvers /Users/mpf/.julia/packages/JSOSolvers/zfm1c/src/trunk.jl:200\n┌ Info:      0  -1.1e-16   2.3e-01         -         -       -       -                -\n└ @ JSOSolvers /Users/mpf/.julia/packages/JSOSolvers/zfm1c/src/trunk.jl:205\n┌ Info:      1  -1.3e-01   3.4e-01   1.0e+00   1.0e+00       0       0  on trust-region boundary\n└ @ JSOSolvers /Users/mpf/.julia/packages/JSOSolvers/zfm1c/src/trunk.jl:368\n┌ Info:      2  -2.3e-01   3.1e-02   1.5e+00   9.8e-01       0       0  solution good enough given atol and rtol\n└ @ JSOSolvers /Users/mpf/.julia/packages/JSOSolvers/zfm1c/src/trunk.jl:368\n┌ Info:      3  -2.3e-01   2.3e-04   1.8e+00   1.0e+00       0       0  solution good enough given atol and rtol\n└ @ JSOSolvers /Users/mpf/.julia/packages/JSOSolvers/zfm1c/src/trunk.jl:368\n┌ Info:      4  -2.3e-01   6.0e-09   1.8e+00   1.0e+00       0       0  solution good enough given atol and rtol\n└ @ JSOSolvers /Users/mpf/.julia/packages/JSOSolvers/zfm1c/src/trunk.jl:368\n┌ Info:      4  -2.3e-01   6.0e-09   1.8e+00\n└ @ JSOSolvers /Users/mpf/.julia/packages/JSOSolvers/zfm1c/src/trunk.jl:402\n\n\n\"Execution stats: first-order stationary\""
  },
  {
    "objectID": "python_code/globalNewton.html",
    "href": "python_code/globalNewton.html",
    "title": "MaxEnt",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom PhysicsData import A, b, x0;\n\nEE (50, 400)\nTT (50, 400)\nATTENTION: You picked scalar particle make sure that\nATTENTION: omega integration bounds are set to [0, inf)\nATTENTION: kernel mltiplied by w**2\n(50,)\n\n\n/Users/nick/Desktop/Summer 2024/KL Problem/PhysicsData.py:28: RuntimeWarning: divide by zero encountered in divide\n  GG_rho = g2_rhopipi / (48*np.pi) * mass_rho * ( 1 - 4*mass_pi**2 / omegas**2 )**(3/2) * np.heaviside(omegas - 2*mass_pi , 0.5)\n/Users/nick/Desktop/Summer 2024/KL Problem/PhysicsData.py:28: RuntimeWarning: invalid value encountered in power\n  GG_rho = g2_rhopipi / (48*np.pi) * mass_rho * ( 1 - 4*mass_pi**2 / omegas**2 )**(3/2) * np.heaviside(omegas - 2*mass_pi , 0.5)\n/Users/nick/Desktop/Summer 2024/KL Problem/PhysicsData.py:28: RuntimeWarning: invalid value encountered in multiply\n  GG_rho = g2_rhopipi / (48*np.pi) * mass_rho * ( 1 - 4*mass_pi**2 / omegas**2 )**(3/2) * np.heaviside(omegas - 2*mass_pi , 0.5)\nAuxilliary functions:\ndef KL(x, mu): \n  # assume mu is postive \n  if np.sum(x) &gt; 1.01 or np.sum(x) &lt; 0.99 or np.any(x&lt;0) == True:\n    return np.inf\n  x_ = x[x&gt;0]\n  mu_ = mu[x&gt;0]\n  return np.dot(x_, np.log(x_ / mu_))\n\n\ndef set_x(A, mu, y): \n  a = A.T @ y\n  M = np.max(a) # to prevent overflow\n  x = np.diag(mu) @ np.exp(a - M)\n  x = x / np.sum(x) # x is always in the unit simplex as enforced by the optimality conditions \n  return x\n\n\ndef dual_val(A, mu, b, lmda, y):\n  return  (lmda /2) * np.linalg.norm(y) ** 2 + np.log(np.dot(mu, np.exp(A.T @ y))) - np.dot(b,y) # d(y) in fact the negative of the dual objective viewed from a max POV\n\n\ndef primal_val(A, mu, b, lmda, x):\n  return (1/(2*lmda)) * np.linalg.norm(A @ x - b) ** 2 + KL(x, mu)\ndef LocalNewton(A, mu, b, lmda=10e-12, eps=10e-5, max_iters=100, verbose=True):\n  m, n = A.shape\n  y = np.zeros(m)\n  x = set_x(A, mu, y) # we think of x simply as a function of y useful in computing d_grad and d_hess\n  # but x here happens to converge to the solution of the primal as y converges to a sol of min d(y)\n  \n  gaps = []\n  d_grad = A @ x + lmda * y - b # Jacobian of d(y)\n  k = 0\n\n  while np.linalg.norm(d_grad) &gt; eps and k &lt; max_iters:\n\n    gap = primal_val(A, mu, b, lmda, x) + dual_val(A, mu, b, lmda, y)\n    gaps.append(gap)\n  \n    if k % 1000 == 0 and verbose == True:\n      print('-' * 10)\n      print(f'Iteration: {k+1}')\n      print(f'Primal value: {primal_val(A, mu, b, lmda, x)}')\n      print(f'Dual value: {dual_val(A, mu, b, lmda, y)}')\n      print(f'Iter: {k+1}, Dual Jacobian Norm: {np.linalg.norm(d_grad)}, Primal-Dual Gap: {gap}')\n\n    # Sol to Newton equation\n    d_hess = A @ (np.diag(x) - x @ x.T) @ A.T + lmda * np.identity(m)\n    d = np.linalg.solve(d_hess, -d_grad) # d_hess is postive definite thus will always have a sol\n\n    y = y + d\n\n\n    x = set_x(A, mu, y)\n    d_grad = A @ x + lmda * y - b\n    k += 1\n\n  #print(f\"total iters: {k}\")\n\n  return x, y, gaps\ndef GlobalNewton(A, mu, b, lmda=10e-12, eps=10e-5, max_iters=100, verbose=True, rho=1e-11, p=2.1, beta=0.1, s= 0.25, truth=x0):\n  m, n = A.shape\n  y = np.zeros(m)\n  x = set_x(A, mu, y) # we think of x simply as a function of y useful in computing d_grad and d_hess\n  # but x here happens to converge to the solution of the primal as y converges to a sol of min d(y)\n  \n  gaps = []\n  armijo_steps = []\n  d_grad = A @ x + lmda * y - b # Jacobian of d(y)\n  k = 0\n\n  Gnorm = np.linalg.norm(d_grad)\n  Gnorms = []\n\n  while Gnorm &gt; eps and k &lt; max_iters:\n\n    gap = primal_val(A, mu, b, lmda, x) + dual_val(A, mu, b, lmda, y)\n    gaps.append(gap)\n  \n    if k % 1000 == 0 and verbose == True:\n      print('-' * 10)\n      print(f'Iteration: {k+1}')\n      print(f'Primal value: {primal_val(A, mu, b, lmda, x)}')\n      print(f'Dual value: {dual_val(A, mu, b, lmda, y)}')\n      print(f'Iter: {k+1}, Dual Jacobian Norm: {np.linalg.norm(d_grad)}, Primal-Dual Gap: {gap}')\n\n    # Sol to Newton equation\n    d_hess = A @ (np.diag(x) - x @ x.T) @ A.T + lmda * np.identity(m)\n    d = np.linalg.solve(d_hess, -d_grad) # d_hess is postive definite thus will always have a sol\n\n    if np.dot(d_grad, d) &gt; -rho * np.linalg.norm(d) ** p: # check if we have sufficient decrease wrt the norm of d\n      armijo_steps.append(k)\n      d = -d_grad\n      # Take a gradient step with Armijo rule\n      t = 1\n      j = 0\n      while dual_val(A, mu, b, lmda, y + t*d) &gt; dual_val(A, mu ,b, lmda, y) + (t*s) * np.dot(d_grad, d):\n        t *= beta\n        j += 1\n      y = y + t*d\n      if k % 1000 == 0 and verbose == True:\n        print(f'Insuff decrease: Armijo checked {j} times')\n        print(f'dk norm {np.linalg.norm(d)}')\n        print(f'dot prod {np.dot(d_grad, d)}')\n    else:\n      # Take a \"Newton\" step\n      y = y + d\n\n\n    x = set_x(A, mu, y)\n    d_grad = A @ x + lmda * y - b\n    k += 1\n    Gnorm = np.linalg.norm(d_grad)\n    Gnorms.append(Gnorm)\n\n  print('-' * 10)\n  print(\"Summary:\")\n  print(f\"Total iters: {k}\")\n  print(f\"Armijo steps: {len(armijo_steps)}\")\n  print(f\"Jacobian Norm: {Gnorms[-1]}\")\n  print(f'Primal-Dual Gap: {gap}')\n  print(f'Primal value: {primal_val(A, mu, b, lmda, x)}')\n  print(f'Dual value: {dual_val(A, mu, b, lmda, y)}')\n  print(f'RMS(x-x0): {np.linalg.norm(truth - x) / np.sqrt(n)}')\n  print(f'RMS(Ax-b): {np.linalg.norm(A @ x - b) / np.sqrt(m)}')\n\n  return x, y, gaps, armijo_steps, Gnorms"
  },
  {
    "objectID": "python_code/globalNewton.html#tests-for-globalized-newton-method-backtracking-with-conventional-armijo-rule",
    "href": "python_code/globalNewton.html#tests-for-globalized-newton-method-backtracking-with-conventional-armijo-rule",
    "title": "MaxEnt",
    "section": "Tests for globalized Newton method (backtracking with conventional Armijo rule):",
    "text": "Tests for globalized Newton method (backtracking with conventional Armijo rule):\nTO-DO: - More thorough hyper-parameter tuning (rho, p, beta, s)\n\nmu = np.ones(x0.shape[0]) / x0.shape[0] # set uniform prior mu\nm, n = A.shape\nlmda=16e-17\n\nx, y, gaps, armijo_steps, Gnorms = GlobalNewton(A, mu, b, lmda, eps=10e-5, max_iters=10000, verbose=True, p=1)\n\n----------\nIteration: 1\nPrimal value: 1097224357798948.6\nDual value: 2.2204460492503128e-16\nIter: 1, Dual Jacobian Norm: 0.592546871138194, Primal-Dual Gap: 1097224357798948.6\n----------\nIteration: 1001\nPrimal value: 99491197448.95615\nDual value: -0.22726906711905315\nIter: 1001, Dual Jacobian Norm: 0.005642444787819557, Primal-Dual Gap: 99491197448.72888\nInsuff decrease: Armijo checked 2 times\ndk norm 0.005642444787819557\ndot prod -3.183718318359209e-05\n----------\nIteration: 2001\nPrimal value: 77747867620.13237\nDual value: -0.22740225879889575\nIter: 2001, Dual Jacobian Norm: 0.004987917164345155, Primal-Dual Gap: 77747867619.90497\nInsuff decrease: Armijo checked 2 times\ndk norm 0.004987917164345155\ndot prod -2.487931763836901e-05\n----------\nIteration: 3001\nPrimal value: 36486650727.63614\nDual value: -0.2275136861035023\nIter: 3001, Dual Jacobian Norm: 0.0034169764753025364, Primal-Dual Gap: 36486650727.40862\n----------\nIteration: 4001\nPrimal value: 29342873315.686836\nDual value: -0.22760410027214562\nIter: 4001, Dual Jacobian Norm: 0.0030642649136370737, Primal-Dual Gap: 29342873315.459232\n----------\nIteration: 5001\nPrimal value: 40374318500.24589\nDual value: -0.2276767091755807\nIter: 5001, Dual Jacobian Norm: 0.0035944098152556865, Primal-Dual Gap: 40374318500.01821\nInsuff decrease: Armijo checked 2 times\ndk norm 0.0035944098152556865\ndot prod -1.2919781920006419e-05\n----------\nIteration: 6001\nPrimal value: 33576790115.879444\nDual value: -0.2277369042387256\nIter: 6001, Dual Jacobian Norm: 0.0032778915230692474, Primal-Dual Gap: 33576790115.651707\nInsuff decrease: Armijo checked 2 times\ndk norm 0.0032778915230692474\ndot prod -1.074457283700923e-05\n----------\nIteration: 7001\nPrimal value: 16857025698.227873\nDual value: -0.2277874081525817\nIter: 7001, Dual Jacobian Norm: 0.0023225520927119135, Primal-Dual Gap: 16857025698.000086\n----------\nIteration: 8001\nPrimal value: 14337331604.877762\nDual value: -0.22783044937325214\nIter: 8001, Dual Jacobian Norm: 0.0021419491388659645, Primal-Dual Gap: 14337331604.649931\n----------\nIteration: 9001\nPrimal value: 12324398400.218485\nDual value: -0.22786765538547793\nIter: 9001, Dual Jacobian Norm: 0.0019859021849017965, Primal-Dual Gap: 12324398399.990618\n----------\nSummary:\nTotal iters: 10000\nArmijo steps: 5048\nJacobian Norm: 0.0023976458744187326\nPrimal-Dual Gap: 6442485256.731591\nPrimal value: 17964705434.966583\nDual value: -0.22789954620057928\nRMS(x-x0): 0.00045865351951943827\nRMS(Ax-b): 0.0003390783313370732\n\n\n\nlog_gaps = np.log(gaps)\niters = np.arange(1,10001).reshape(10000,1)\n# Create subplots\nfig, axs = plt.subplots(3, 1, figsize=(8, 16))\n\n# Plot 1: log(Primal Dual Gap)\naxs[0].plot(iters, log_gaps)\naxs[0].plot(armijo_steps, [log_gaps[i] for i in armijo_steps], 'ro', label='gradient step taken')\naxs[0].set_title('log(Primal Dual Gap)')\naxs[0].set_xlabel('iteration')\naxs[0].set_ylim(20, 29)\naxs[0].legend()\n\n# Plot 2: log(Norm of dual Jacobian)\naxs[1].plot(np.log(Gnorms))\naxs[1].set_title('log(Norm of dual Jacobian)')\naxs[1].set_xlabel('iteration')\naxs[1].set_ylim(-9, -4)\n\n# Plot 3: Comparison plot\naxs[2].plot(x0, label=\"ground truth\")\naxs[2].plot(x, label=f\"{lmda}\")\naxs[2].plot(mu, label=\"prior\")\naxs[2].legend()\naxs[2].grid()\n\n# Adjust layout\nplt.tight_layout()\n\n# Show plot\nplt.show()"
  },
  {
    "objectID": "python_code/globalNewton.html#tests-using-the-basic-local-newton-method",
    "href": "python_code/globalNewton.html#tests-using-the-basic-local-newton-method",
    "title": "MaxEnt",
    "section": "Tests using the basic local Newton Method",
    "text": "Tests using the basic local Newton Method\n\nmu = np.ones(x0.shape[0]) / x0.shape[0] # set uniform prior mu\nm, n = A.shape\n\n#lmds = [3e-16]\nlmds = [3e-16, 1e-15, 1e-10, 1e-5, 1e-2]      \n# lmds = [1e-1, 1e-2, 1e-4]   \n# lmds = [1e-1] \nplt.plot(x0, label=\"ground truth\")\nfor lmda in lmds:\n    x, y, _ = LocalNewton(A, mu, b, lmda=lmda, eps=1e-6, max_iters=100, verbose=False)\n    plt.plot(x, label=f\"{lmda}\")\n    print(f'Newton Sol (lambda={lmda}) RMS(x-x0): {np.linalg.norm(x0 - x) / np.sqrt(n)}')\n    print(f'Newton Sol (lambda={lmda}) RMS(Ax-b): {np.linalg.norm(A @ x - b) / np.sqrt(m)}')\n    print('-' * 10)\nx_ = np.linalg.lstsq(A, b, rcond=None)\nplt.plot(x_[0], label='OLS Sol')\nplt.plot(mu, label=\"prior\")\nplt.legend()\nplt.grid()\n\nprint(f'OLS Sol RMS(x-x0): {np.linalg.norm(x0 - x_[0]) / np.sqrt(n)}')\nprint(f'OLS Sol RMS(Ax-b): {np.linalg.norm(A @ x_[0] - b) / np.sqrt(m)}')\n\nNewton Sol (lambda=3e-16) RMS(x-x0): 0.00047092935506106446\nNewton Sol (lambda=3e-16) RMS(Ax-b): 0.0010554123592560406\n----------\nNewton Sol (lambda=1e-15) RMS(x-x0): 0.0004943197220328498\nNewton Sol (lambda=1e-15) RMS(Ax-b): 0.0011605674771236797\n----------\nNewton Sol (lambda=1e-10) RMS(x-x0): 0.0008191634890288051\nNewton Sol (lambda=1e-10) RMS(Ax-b): 0.0016598232831281253\n----------\nNewton Sol (lambda=1e-05) RMS(x-x0): 0.001521669066519315\nNewton Sol (lambda=1e-05) RMS(Ax-b): 0.022980629196860024\n----------\nNewton Sol (lambda=0.01) RMS(x-x0): 0.0018607672897144275\nNewton Sol (lambda=0.01) RMS(Ax-b): 0.06633638326771332\n----------\nOLS Sol RMS(x-x0): 0.0006539727444728927\nOLS Sol RMS(Ax-b): 2.168002603497676e-15"
  },
  {
    "objectID": "quarto/index.html",
    "href": "quarto/index.html",
    "title": "Maximum Entropy Linear Inversion Project",
    "section": "",
    "text": "About\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross Entropy under Linear Constraints\n\n\nA dual Newton solver\n\n\n\n\n\n\n\n\nApr 3, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nKL-Regularized Least Squares\n\n\nPhysics and synthetic data sets\n\n\n\n\n\n\n\n\nJun 17, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nPreconditioning\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nScaled simplex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "quarto/synthetic-data.html",
    "href": "quarto/synthetic-data.html",
    "title": "KL-Regularized Least Squares",
    "section": "",
    "text": "Import packages\nusing Revise\nusing KLLS\nusing NPZ\nusing Plots\nusing Printf\nusing UnPack\nusing LinearAlgebra"
  },
  {
    "objectID": "quarto/synthetic-data.html#data-sets",
    "href": "quarto/synthetic-data.html#data-sets",
    "title": "KL-Regularized Least Squares",
    "section": "Data sets",
    "text": "Data sets\nThere are three data sets available:\n\nPhysicsData.npz\nsynthetic_data.npz\nTobias_data.npz\n\n\nQuestions\n\nThe Tobias_data.npz file doesn’t seem to be any different from synthetic_data.npz. Are these geniunely different data sets?\nWhat is the meaning of the b vector in synthetic_data.npz?\nHow do we normalize the data in synthetic_data.npz?\n\n\nRho-meson\n\ndataRho = npzread(\"../data/rho-meson_testproblem.npz\", [\"A\", \"x\", \"b_avg\"]) \nprobRho = KLLSModel(dataRho[\"A\"], dataRho[\"b_avg\"], name=\"Rho-meson\")\n\nKL regularized least-squares: Rho-meson\n\n\n   m =    50  bNrm = 6.2e+00\n   n =   400  λ    = 1.5e-08\n\n\nCheck normalization:\n\nsum(dataRho[\"x\"])\n\n1.0\n\n\n\n\nSynthetic UEG\n\ndataUEG = npzread(\"../data/synthetic-UEG_testproblem.npz\", [\"A\", \"x\", \"b_avg\", \"mu\"]) \nprobUEG = KLLSModel(dataUEG[\"A\"], dataUEG[\"b_avg\"], name=\"UEG\")\n\nKL regularized least-squares: UEG\n\n\n   m =   201  bNrm = 3.8e+00\n   n =   500  λ    = 1.5e-08\n\n\nCheck normalization:\n\nsum(dataUEG[\"x\"])\n\n0.9999999f0\n\n\n\n\nPhysicsData:\n\ndataPhy = npzread(\"../data/PhysicsData.npz\", [\"A\", \"b\", \"x0\"])\nprobPhy = KLLSModel(dataPhy[\"A\"], dataPhy[\"b\"], name=\"Physics\")\n\nKL regularized least-squares: Physics\n\n\n   m =    50  bNrm = 6.2e+00\n   n =   400  λ    = 1.5e-08\n\n\nCheck normalization:\n\nsum(dataPhy[\"x0\"])\n\n1.0\n\n\n\n\nSynthetic data:\nFor this dataset, the ground truth seems to be named x instead of x0, as in the other data sets. We’ll rename it for consistency:\n\ndataSyn = npzread(\"../data/synthetic_data.npz\", [\"A\", \"b\", \"x\"])\ndataSyn[\"x0\"] = dataSyn[\"x\"] # convenient\nprobSyn = KLLSModel(dataSyn[\"A\"], dataSyn[\"b\"], name=\"Synthetic Data\")\n\nKL regularized least-squares: Synthetic Data\n\n\n   m =   201  bNrm = 2.9e+01\n   n =   250  λ    = 1.5e-08\n\n\nCheck normalization:\n\nsum(dataSyn[\"x0\"])\n\n6.3280697f0\n\n\n\n\n\n\n\n\nNormalization\n\n\n\nThe synthetic data doesn’t appear to be normalized. As agreed, we normalize the data such that the first element of the right-hand side vector \\(b\\) is 1:\n\nprobSyn.b ./= probSyn.b[1]\nprobSyn.A ./= probSyn.b[1]\ndataSyn[\"x0\"] ./= probSyn.b[1]\n\nQuestions:\n\nNote that this normalization still doesn’t put x0 into the simplex:\n\n\nsum(dataSyn[\"x0\"])\n\n6.3280697f0\n\n\n\nWhy is x0 for this test set stored as single precision float? (See “f” in line above.)\n\n\n\n\n\n\nVisualizing signals\nHere are the signals to be recovered:\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRecovery\nRecover the signals as the solution of the KL-regularized least squares problem \\[\n\\min_p \\frac{1}{2} \\|Ap - b\\|^2 + \\lambda \\sum_{i=1}^n p_i \\log(p_i)\n\\]\n\n\nImplement test functions\nlogrange(start, stop, length) = exp10.(range(start, stop=stop, length=length))\nsolve_range(prob, λs) = map(λs) do λ\n        prob.λ = λ\n        stats = solve!(prob)\n        (λ=λ, p=stats.solution, iters=stats.iter, solve_time=stats.elapsed_time)\nend\nfunction plot_results(stats, x0; title=\"Recovered distributions\")\n    lab = hcat([@sprintf(\"λ = %6.0e\", λ) for λ in getfield.(stats, :λ)]...)\n    default(lw=2, title=title)\n    plot(getfield.(stats, :p), label=lab)\n    plot!(x0, label=\"ground truth\")\nend\n\n\n\nPhysics data\nSolve the problem for a range of logarithmically spaced regularization parameters \\(\\lambda\\) between \\(10^{-16}\\) and \\(10^{-5}\\).\n\nstatsPhy = solve_range(probPhy, logrange(-16, -5, 4))\nplot_results(statsPhy, dataPhy[\"x0\"])\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReport results for smallest value of \\(\\lambda\\):\n\n\nImplement report function\nfunction report_errors(stats, data)\n  @unpack A, b, x0 = data\n  p = stats.p\n  m, n = size(A)\n  @printf(\"%20s: %11.2e\\n\", \"rms(p-x0)\", norm(p - x0)/√n)\n  @printf(\"%20s: %11.2e\\n\", \"rms(Ap-b)\", norm(A*p - b)/√m)\n  @printf(\"%20s: %11.2e\\n\", \"rms(Ax0-b)\", norm(A*x0 - b)/√m)\n  @printf(\"%20s: %11f\\n\", \"Solve time (sec)\", stats.solve_time)\nend\n\n\n\nreport_errors(statsPhy[1], dataPhy)\n\n           rms(p-x0):    4.56e-04\n           rms(Ap-b):    9.49e-09\n          rms(Ax0-b):    2.55e-16\n    Solve time (sec):    0.020790\n\n\n\n\nSynthetic data\nHere we try to recover the solution from the synthetic data set. But as we see here, we get garbage:\n\nstatsSyn = solve!(probSyn)\nplot([statsSyn.solution, dataSyn[\"x0\"]], label=[\"Recovered\" \"Ground truth\"])\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIt seems that the vector b in that data set isn’t correct. What is b the meaning of b in this data set?\n\n\nAs a test, we construct b from the ground truth (forcibly normalized) x0:\n\nlet\n  @unpack A, x0 = dataSyn\n  x0 = x0/sum(x0)\n  b = A*x0\n  stats = solve!(KLLSModel(A, b))\n  plot([stats.solution, x0], label=[\"Recovered\" \"Ground truth\"])\nend\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUEG\n\nlet\n  probUEG.λ = 1e-6\n  stats = solve!(probUEG)\n  plot([stats.solution, dataUEG[\"x\"]], label=[\"Recovered\" \"Ground truth\"])\nend"
  },
  {
    "objectID": "quarto/preconditioning.html",
    "href": "quarto/preconditioning.html",
    "title": "Preconditioning",
    "section": "",
    "text": "Each iteration of the preconditioned Newton CG method approximately solves the trust-region subproblem \\[\n\\min_{s} \\{\\tfrac{1}{2} \\langle s, H_k s \\rangle + \\langle \\nabla f_k,s  \\rangle \\mid \\|s\\|_M \\leq \\Delta\\}\n\\] where \\(\\nabla f_k\\) and \\(H_k\\) are the current gradient and Hessian, and \\(M\\approx H\\) is a positive definite preconditioner. For the KL regularized LS problem, \\[\nH_k = A S_k A^T + \\lambda I, \\quad S_k:= X_k - x_k x_k^T\n\\] where \\(x_k\\) is the current primal iterate and \\(X_k=\\operatorname{Diag}(x_k)\\).\nWe consider these preconditioners:\n\nDiagonal, constant: \\(M = \\operatorname{Diag}(AA^T) + \\lambda I\\)\n(not working) Diagonal, variable: \\(M = \\operatorname{Diag}(AX_kA^T) + \\lambda I\\)\n(not yet implemented) Cholesky, constant: \\(M = AA^T + \\lambda I\\)\n\nThe first two preconditioners have complexity \\(O(mn)\\) to compute and \\(O(m)\\) to apply. The third has cubic complexity, but that cost can be amortized over the Newton iterations.\n\n\nCode\nusing LinearAlgebra, NPZ, StatsPlots\nusing KLLS\nimport KLLS: KLLSModel, solve!\n\n\nLoad the synthetic UEG test problem:\n\ndata = try # needed because of vscode quirks while developing\n    npzread(\"../data/synthetic-UEG_testproblem.npz\")\ncatch\n    npzread(\"./data/synthetic-UEG_testproblem.npz\")\nend\nkldata = KLLSModel(data[\"A\"], data[\"b_avg\"])\n\nKL regularized least-squares\n\n\n   m =   201  bNrm = 3.8e+00\n   n =   500  λ    = 1.5e-08\n\n\nBuild the preconditioner object:\n\nMAA = KLLS.DiagAAPreconditioner(kldata);\n# MASA = KLLS.DiagASAPreconditioner(kldata) # NOT WORKING! 😢\n# AA = KLLS.AAPreconditioner(kldata) # NOT ADVISED 😱 (at least for this problem)\n\nSolve the problem with and without preconditioning:\n\nkldata.λ=1e-6\nsolve!(M) = solve!(kldata, M=M, trace=true)\nstatsI = solve!(I)\nstatsMAA = solve!(MAA)\n# statsMASA = solve!(MASA)\n# statsAA = solve!(AA)\n\nPlot the dual objective value and cumulative CG iterations."
  },
  {
    "objectID": "python/globalNewton.html",
    "href": "python/globalNewton.html",
    "title": "MaxEnt",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\nfrom PhysicsData import A, b, x0;\n\nEE (50, 400)\nTT (50, 400)\nATTENTION: You picked scalar particle make sure that\nATTENTION: omega integration bounds are set to [0, inf)\nATTENTION: kernel mltiplied by w**2\n(50,)\n\n\n/Users/nick/Desktop/Summer 2024/KL Problem/PhysicsData.py:28: RuntimeWarning: divide by zero encountered in divide\n  GG_rho = g2_rhopipi / (48*np.pi) * mass_rho * ( 1 - 4*mass_pi**2 / omegas**2 )**(3/2) * np.heaviside(omegas - 2*mass_pi , 0.5)\n/Users/nick/Desktop/Summer 2024/KL Problem/PhysicsData.py:28: RuntimeWarning: invalid value encountered in power\n  GG_rho = g2_rhopipi / (48*np.pi) * mass_rho * ( 1 - 4*mass_pi**2 / omegas**2 )**(3/2) * np.heaviside(omegas - 2*mass_pi , 0.5)\n/Users/nick/Desktop/Summer 2024/KL Problem/PhysicsData.py:28: RuntimeWarning: invalid value encountered in multiply\n  GG_rho = g2_rhopipi / (48*np.pi) * mass_rho * ( 1 - 4*mass_pi**2 / omegas**2 )**(3/2) * np.heaviside(omegas - 2*mass_pi , 0.5)\nAuxilliary functions:\ndef KL(x, mu): \n  # assume mu is postive \n  if np.sum(x) &gt; 1.01 or np.sum(x) &lt; 0.99 or np.any(x&lt;0) == True:\n    return np.inf\n  x_ = x[x&gt;0]\n  mu_ = mu[x&gt;0]\n  return np.dot(x_, np.log(x_ / mu_))\n\n\ndef set_x(A, mu, y): \n  a = A.T @ y\n  M = np.max(a) # to prevent overflow\n  x = np.diag(mu) @ np.exp(a - M)\n  x = x / np.sum(x) # x is always in the unit simplex as enforced by the optimality conditions \n  return x\n\n\ndef dual_val(A, mu, b, lmda, y):\n  return  (lmda /2) * np.linalg.norm(y) ** 2 + np.log(np.dot(mu, np.exp(A.T @ y))) - np.dot(b,y) # d(y) in fact the negative of the dual objective viewed from a max POV\n\n\ndef primal_val(A, mu, b, lmda, x):\n  return (1/(2*lmda)) * np.linalg.norm(A @ x - b) ** 2 + KL(x, mu)\ndef LocalNewton(A, mu, b, lmda=10e-12, eps=10e-5, max_iters=100, verbose=True):\n  m, n = A.shape\n  y = np.zeros(m)\n  x = set_x(A, mu, y) # we think of x simply as a function of y useful in computing d_grad and d_hess\n  # but x here happens to converge to the solution of the primal as y converges to a sol of min d(y)\n  \n  gaps = []\n  d_grad = A @ x + lmda * y - b # Jacobian of d(y)\n  k = 0\n\n  while np.linalg.norm(d_grad) &gt; eps and k &lt; max_iters:\n\n    gap = primal_val(A, mu, b, lmda, x) + dual_val(A, mu, b, lmda, y)\n    gaps.append(gap)\n  \n    if k % 1000 == 0 and verbose == True:\n      print('-' * 10)\n      print(f'Iteration: {k+1}')\n      print(f'Primal value: {primal_val(A, mu, b, lmda, x)}')\n      print(f'Dual value: {dual_val(A, mu, b, lmda, y)}')\n      print(f'Iter: {k+1}, Dual Jacobian Norm: {np.linalg.norm(d_grad)}, Primal-Dual Gap: {gap}')\n\n    # Sol to Newton equation\n    d_hess = A @ (np.diag(x) - x @ x.T) @ A.T + lmda * np.identity(m)\n    d = np.linalg.solve(d_hess, -d_grad) # d_hess is postive definite thus will always have a sol\n\n    y = y + d\n\n\n    x = set_x(A, mu, y)\n    d_grad = A @ x + lmda * y - b\n    k += 1\n\n  #print(f\"total iters: {k}\")\n\n  return x, y, gaps\ndef GlobalNewton(A, mu, b, lmda=10e-12, eps=10e-5, max_iters=100, verbose=True, rho=1e-11, p=2.1, beta=0.1, s= 0.25, truth=x0):\n  m, n = A.shape\n  y = np.zeros(m)\n  x = set_x(A, mu, y) # we think of x simply as a function of y useful in computing d_grad and d_hess\n  # but x here happens to converge to the solution of the primal as y converges to a sol of min d(y)\n  \n  gaps = []\n  armijo_steps = []\n  d_grad = A @ x + lmda * y - b # Jacobian of d(y)\n  k = 0\n\n  Gnorm = np.linalg.norm(d_grad)\n  Gnorms = []\n\n  while Gnorm &gt; eps and k &lt; max_iters:\n\n    gap = primal_val(A, mu, b, lmda, x) + dual_val(A, mu, b, lmda, y)\n    gaps.append(gap)\n  \n    if k % 1000 == 0 and verbose == True:\n      print('-' * 10)\n      print(f'Iteration: {k+1}')\n      print(f'Primal value: {primal_val(A, mu, b, lmda, x)}')\n      print(f'Dual value: {dual_val(A, mu, b, lmda, y)}')\n      print(f'Iter: {k+1}, Dual Jacobian Norm: {np.linalg.norm(d_grad)}, Primal-Dual Gap: {gap}')\n\n    # Sol to Newton equation\n    d_hess = A @ (np.diag(x) - x @ x.T) @ A.T + lmda * np.identity(m)\n    d = np.linalg.solve(d_hess, -d_grad) # d_hess is postive definite thus will always have a sol\n\n    if np.dot(d_grad, d) &gt; -rho * np.linalg.norm(d) ** p: # check if we have sufficient decrease wrt the norm of d\n      armijo_steps.append(k)\n      d = -d_grad\n      # Take a gradient step with Armijo rule\n      t = 1\n      j = 0\n      while dual_val(A, mu, b, lmda, y + t*d) &gt; dual_val(A, mu ,b, lmda, y) + (t*s) * np.dot(d_grad, d):\n        t *= beta\n        j += 1\n      y = y + t*d\n      if k % 1000 == 0 and verbose == True:\n        print(f'Insuff decrease: Armijo checked {j} times')\n        print(f'dk norm {np.linalg.norm(d)}')\n        print(f'dot prod {np.dot(d_grad, d)}')\n    else:\n      # Take a \"Newton\" step\n      y = y + d\n\n\n    x = set_x(A, mu, y)\n    d_grad = A @ x + lmda * y - b\n    k += 1\n    Gnorm = np.linalg.norm(d_grad)\n    Gnorms.append(Gnorm)\n\n  print('-' * 10)\n  print(\"Summary:\")\n  print(f\"Total iters: {k}\")\n  print(f\"Armijo steps: {len(armijo_steps)}\")\n  print(f\"Jacobian Norm: {Gnorms[-1]}\")\n  print(f'Primal-Dual Gap: {gap}')\n  print(f'Primal value: {primal_val(A, mu, b, lmda, x)}')\n  print(f'Dual value: {dual_val(A, mu, b, lmda, y)}')\n  print(f'RMS(x-x0): {np.linalg.norm(truth - x) / np.sqrt(n)}')\n  print(f'RMS(Ax-b): {np.linalg.norm(A @ x - b) / np.sqrt(m)}')\n\n  return x, y, gaps, armijo_steps, Gnorms"
  },
  {
    "objectID": "python/globalNewton.html#tests-for-globalized-newton-method-backtracking-with-conventional-armijo-rule",
    "href": "python/globalNewton.html#tests-for-globalized-newton-method-backtracking-with-conventional-armijo-rule",
    "title": "MaxEnt",
    "section": "Tests for globalized Newton method (backtracking with conventional Armijo rule):",
    "text": "Tests for globalized Newton method (backtracking with conventional Armijo rule):\nTO-DO: - More thorough hyper-parameter tuning (rho, p, beta, s)\n\nmu = np.ones(x0.shape[0]) / x0.shape[0] # set uniform prior mu\nm, n = A.shape\nlmda=16e-17\n\nx, y, gaps, armijo_steps, Gnorms = GlobalNewton(A, mu, b, lmda, eps=10e-5, max_iters=10000, verbose=True, p=1)\n\n----------\nIteration: 1\nPrimal value: 1097224357798948.6\nDual value: 2.2204460492503128e-16\nIter: 1, Dual Jacobian Norm: 0.592546871138194, Primal-Dual Gap: 1097224357798948.6\n----------\nIteration: 1001\nPrimal value: 99491197448.95615\nDual value: -0.22726906711905315\nIter: 1001, Dual Jacobian Norm: 0.005642444787819557, Primal-Dual Gap: 99491197448.72888\nInsuff decrease: Armijo checked 2 times\ndk norm 0.005642444787819557\ndot prod -3.183718318359209e-05\n----------\nIteration: 2001\nPrimal value: 77747867620.13237\nDual value: -0.22740225879889575\nIter: 2001, Dual Jacobian Norm: 0.004987917164345155, Primal-Dual Gap: 77747867619.90497\nInsuff decrease: Armijo checked 2 times\ndk norm 0.004987917164345155\ndot prod -2.487931763836901e-05\n----------\nIteration: 3001\nPrimal value: 36486650727.63614\nDual value: -0.2275136861035023\nIter: 3001, Dual Jacobian Norm: 0.0034169764753025364, Primal-Dual Gap: 36486650727.40862\n----------\nIteration: 4001\nPrimal value: 29342873315.686836\nDual value: -0.22760410027214562\nIter: 4001, Dual Jacobian Norm: 0.0030642649136370737, Primal-Dual Gap: 29342873315.459232\n----------\nIteration: 5001\nPrimal value: 40374318500.24589\nDual value: -0.2276767091755807\nIter: 5001, Dual Jacobian Norm: 0.0035944098152556865, Primal-Dual Gap: 40374318500.01821\nInsuff decrease: Armijo checked 2 times\ndk norm 0.0035944098152556865\ndot prod -1.2919781920006419e-05\n----------\nIteration: 6001\nPrimal value: 33576790115.879444\nDual value: -0.2277369042387256\nIter: 6001, Dual Jacobian Norm: 0.0032778915230692474, Primal-Dual Gap: 33576790115.651707\nInsuff decrease: Armijo checked 2 times\ndk norm 0.0032778915230692474\ndot prod -1.074457283700923e-05\n----------\nIteration: 7001\nPrimal value: 16857025698.227873\nDual value: -0.2277874081525817\nIter: 7001, Dual Jacobian Norm: 0.0023225520927119135, Primal-Dual Gap: 16857025698.000086\n----------\nIteration: 8001\nPrimal value: 14337331604.877762\nDual value: -0.22783044937325214\nIter: 8001, Dual Jacobian Norm: 0.0021419491388659645, Primal-Dual Gap: 14337331604.649931\n----------\nIteration: 9001\nPrimal value: 12324398400.218485\nDual value: -0.22786765538547793\nIter: 9001, Dual Jacobian Norm: 0.0019859021849017965, Primal-Dual Gap: 12324398399.990618\n----------\nSummary:\nTotal iters: 10000\nArmijo steps: 5048\nJacobian Norm: 0.0023976458744187326\nPrimal-Dual Gap: 6442485256.731591\nPrimal value: 17964705434.966583\nDual value: -0.22789954620057928\nRMS(x-x0): 0.00045865351951943827\nRMS(Ax-b): 0.0003390783313370732\n\n\n\nlog_gaps = np.log(gaps)\niters = np.arange(1,10001).reshape(10000,1)\n# Create subplots\nfig, axs = plt.subplots(3, 1, figsize=(8, 16))\n\n# Plot 1: log(Primal Dual Gap)\naxs[0].plot(iters, log_gaps)\naxs[0].plot(armijo_steps, [log_gaps[i] for i in armijo_steps], 'ro', label='gradient step taken')\naxs[0].set_title('log(Primal Dual Gap)')\naxs[0].set_xlabel('iteration')\naxs[0].set_ylim(20, 29)\naxs[0].legend()\n\n# Plot 2: log(Norm of dual Jacobian)\naxs[1].plot(np.log(Gnorms))\naxs[1].set_title('log(Norm of dual Jacobian)')\naxs[1].set_xlabel('iteration')\naxs[1].set_ylim(-9, -4)\n\n# Plot 3: Comparison plot\naxs[2].plot(x0, label=\"ground truth\")\naxs[2].plot(x, label=f\"{lmda}\")\naxs[2].plot(mu, label=\"prior\")\naxs[2].legend()\naxs[2].grid()\n\n# Adjust layout\nplt.tight_layout()\n\n# Show plot\nplt.show()"
  },
  {
    "objectID": "python/globalNewton.html#tests-using-the-basic-local-newton-method",
    "href": "python/globalNewton.html#tests-using-the-basic-local-newton-method",
    "title": "MaxEnt",
    "section": "Tests using the basic local Newton Method",
    "text": "Tests using the basic local Newton Method\n\nmu = np.ones(x0.shape[0]) / x0.shape[0] # set uniform prior mu\nm, n = A.shape\n\n#lmds = [3e-16]\nlmds = [3e-16, 1e-15, 1e-10, 1e-5, 1e-2]      \n# lmds = [1e-1, 1e-2, 1e-4]   \n# lmds = [1e-1] \nplt.plot(x0, label=\"ground truth\")\nfor lmda in lmds:\n    x, y, _ = LocalNewton(A, mu, b, lmda=lmda, eps=1e-6, max_iters=100, verbose=False)\n    plt.plot(x, label=f\"{lmda}\")\n    print(f'Newton Sol (lambda={lmda}) RMS(x-x0): {np.linalg.norm(x0 - x) / np.sqrt(n)}')\n    print(f'Newton Sol (lambda={lmda}) RMS(Ax-b): {np.linalg.norm(A @ x - b) / np.sqrt(m)}')\n    print('-' * 10)\nx_ = np.linalg.lstsq(A, b, rcond=None)\nplt.plot(x_[0], label='OLS Sol')\nplt.plot(mu, label=\"prior\")\nplt.legend()\nplt.grid()\n\nprint(f'OLS Sol RMS(x-x0): {np.linalg.norm(x0 - x_[0]) / np.sqrt(n)}')\nprint(f'OLS Sol RMS(Ax-b): {np.linalg.norm(A @ x_[0] - b) / np.sqrt(m)}')\n\nNewton Sol (lambda=3e-16) RMS(x-x0): 0.00047092935506106446\nNewton Sol (lambda=3e-16) RMS(Ax-b): 0.0010554123592560406\n----------\nNewton Sol (lambda=1e-15) RMS(x-x0): 0.0004943197220328498\nNewton Sol (lambda=1e-15) RMS(Ax-b): 0.0011605674771236797\n----------\nNewton Sol (lambda=1e-10) RMS(x-x0): 0.0008191634890288051\nNewton Sol (lambda=1e-10) RMS(Ax-b): 0.0016598232831281253\n----------\nNewton Sol (lambda=1e-05) RMS(x-x0): 0.001521669066519315\nNewton Sol (lambda=1e-05) RMS(Ax-b): 0.022980629196860024\n----------\nNewton Sol (lambda=0.01) RMS(x-x0): 0.0018607672897144275\nNewton Sol (lambda=0.01) RMS(Ax-b): 0.06633638326771332\n----------\nOLS Sol RMS(x-x0): 0.0006539727444728927\nOLS Sol RMS(Ax-b): 2.168002603497676e-15"
  }
]